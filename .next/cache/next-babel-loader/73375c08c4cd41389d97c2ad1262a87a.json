{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nvar __jsx = React.createElement;\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport { Button, Form, Message } from 'semantic-ui-react';\nimport Layout from '../../components/Layout';\nimport { Link, Router } from '../../routes';\nimport verify from '../../ethereum/academic/verify';\n\nvar path = require('path'); //const fs = require('fs-extra');\n\n\nvar CertificateIndex = /*#__PURE__*/function (_Component) {\n  _inherits(CertificateIndex, _Component);\n\n  var _super = _createSuper(CertificateIndex);\n\n  function CertificateIndex() {\n    var _this;\n\n    _classCallCheck(this, CertificateIndex);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      selectedFile: null,\n      hashValue: '',\n      message: '',\n      errorMessage: '',\n      loading: false\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onFileChange\", function (event) {\n      _this.setState({\n        selectedFile: event.target.files[0]\n      });\n\n      var curFile = event.target.files[0];\n      var reader = new FileReader();\n\n      var that = _assertThisInitialized(_this);\n\n      reader.readAsText(curFile);\n\n      reader.onload = function (e) {\n        //console.log('file:', e.target.result);\n        var jsonData = JSON.parse(this.result); //console.log(jsonData);\n        // hash json\n\n        var reader = new FileReader();\n        reader.readAsArrayBuffer(curFile);\n\n        reader.onload = function (e) {\n          var wordArray = CryptoJS.lib.WordArray.create(reader.result);\n          var hash = CryptoJS.SHA256(wordArray).toString();\n          this.hashValue = hash;\n          that.setState({\n            hashValue: hash\n          });\n          console.log(that.state.hashValue);\n        };\n      }; // build json\n      // const buildPath = path.resolve(__dirname, 'build');\n      // // const source = fs.readFileSync(jsonData, 'utf8');\n      // // const output = solc.compile(source, 1).contracts;\n      // fs.ensureDirSync(buildPath);\n      // //console.log(output);\n      // fs.outputJsonSync(\n      //   path.resolve(buildPath, 'certificate.json'),\n      //   jsonData\n      //   );\n\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"fileData\", function () {\n      if (_this.state.selectedFile) {\n        return __jsx(\"div\", null, __jsx(\"h2\", null, \"File Details:\"), __jsx(\"p\", null, \"File Name: \", _this.state.selectedFile.name), __jsx(\"p\", null, \"File Type: \", _this.state.selectedFile.type));\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onClick\", /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var accounts;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _this.setState({\n                message: 'Waiting on verifing success...'\n              });\n\n              _this.setState({\n                loading: true,\n                errorMessage: ''\n              }); //console.log(this.state.hashValue);\n\n\n              _context.prev = 2;\n              _context.next = 5;\n              return web3.eth.getAccounts();\n\n            case 5:\n              accounts = _context.sent;\n              _context.next = 8;\n              return verify.methods.validation(_this.state.hashValue).send({\n                from: accounts[0]\n              });\n\n            case 8:\n              Router.pushRoute(\"/Academic/certificates/\".concat(_this.state.hashValue, \"/success\"));\n              _context.next = 14;\n              break;\n\n            case 11:\n              _context.prev = 11;\n              _context.t0 = _context[\"catch\"](2);\n\n              _this.setState({\n                errorMessage: _context.t0.message\n              });\n\n            case 14:\n              //this.setState({ message: 'A certificate has been verified!' })\n              _this.setState({\n                loading: false\n              });\n\n            case 15:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[2, 11]]);\n    })));\n\n    return _this;\n  }\n\n  _createClass(CertificateIndex, [{\n    key: \"render\",\n    value: function render() {\n      return __jsx(Layout, null, __jsx(\"script\", {\n        src: \"https://cdnjs.cloudflare.com/ajax/libs/crypto-js/3.1.9-1/crypto-js.js\"\n      }), __jsx(\"h1\", null, \"Verify Certificates\"), __jsx(Form, null, __jsx(\"h3\", null, \"Choose a JSON file\"), __jsx(\"input\", {\n        type: \"file\",\n        onChange: this.onFileChange,\n        accept: \"application/json\",\n        style: {\n          marginBottom: 20\n        }\n      }), this.fileData(), __jsx(\"a\", null, __jsx(Button, {\n        onClick: this.onClick,\n        content: \"Verify\",\n        icon: \"check circle outline\",\n        primary: true,\n        style: {\n          marginTop: 20\n        }\n      })), __jsx(\"h1\", null, this.state.message)));\n    }\n  }]);\n\n  return CertificateIndex;\n}(Component);\n\nexport default CertificateIndex;","map":{"version":3,"sources":["C:/Users/user/Desktop/college/Blockchain/DApp/nextjs-web/pages/Academic/index.js"],"names":["React","Component","Button","Form","Message","Layout","Link","Router","verify","path","require","CertificateIndex","selectedFile","hashValue","message","errorMessage","loading","event","setState","target","files","curFile","reader","FileReader","that","readAsText","onload","e","jsonData","JSON","parse","result","readAsArrayBuffer","wordArray","CryptoJS","lib","WordArray","create","hash","SHA256","toString","console","log","state","name","type","web3","eth","getAccounts","accounts","methods","validation","send","from","pushRoute","onFileChange","marginBottom","fileData","onClick","marginTop"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport { Button, Form, Message } from 'semantic-ui-react';\r\nimport Layout from '../../components/Layout';\r\nimport { Link, Router } from '../../routes';\r\nimport verify from '../../ethereum/academic/verify';\r\nconst path = require('path');\r\n//const fs = require('fs-extra');\r\n\r\nclass CertificateIndex extends Component {\r\n  state = { \r\n    selectedFile: null,\r\n    hashValue: '',\r\n    message: '',\r\n    errorMessage: '',\r\n    loading: false\r\n  };\r\n\r\n  onFileChange = event => {\r\n    this.setState({ selectedFile: event.target.files[0] });\r\n\r\n    const curFile = event.target.files[0];\r\n    const reader = new FileReader();\r\n    var that = this;\r\n    reader.readAsText(curFile);\r\n    reader.onload = function (e) {\r\n      //console.log('file:', e.target.result);\r\n      let jsonData = JSON.parse(this.result);\r\n      //console.log(jsonData);\r\n\r\n      // hash json\r\n      let reader = new FileReader();\r\n      reader.readAsArrayBuffer(curFile);\r\n      reader.onload = function (e) {\r\n        var wordArray = CryptoJS.lib.WordArray.create(reader.result);\r\n        var hash = CryptoJS.SHA256(wordArray).toString();\r\n        this.hashValue = hash;\r\n        that.setState({ hashValue: hash });\r\n        console.log(that.state.hashValue);\r\n      };\r\n    };\r\n\r\n    // build json\r\n    // const buildPath = path.resolve(__dirname, 'build');\r\n\r\n    // // const source = fs.readFileSync(jsonData, 'utf8');\r\n    // // const output = solc.compile(source, 1).contracts;\r\n\r\n    // fs.ensureDirSync(buildPath);\r\n\r\n    // //console.log(output);\r\n    // fs.outputJsonSync(\r\n    //   path.resolve(buildPath, 'certificate.json'),\r\n    //   jsonData\r\n    //   );\r\n  };\r\n\r\n  fileData = () => {\r\n    if (this.state.selectedFile) {\r\n      return (\r\n        <div>\r\n          <h2>File Details:</h2>\r\n          <p>File Name: {this.state.selectedFile.name}</p>\r\n          <p>File Type: {this.state.selectedFile.type}</p>\r\n        </div>\r\n      );\r\n    }\r\n  };\r\n\r\n  onClick = async () => {\r\n    this.setState({ message: 'Waiting on verifing success...' })\r\n    this.setState({ loading: true, errorMessage: '' });\r\n\r\n    //console.log(this.state.hashValue);\r\n    try {\r\n      const accounts = await web3.eth.getAccounts();\r\n      await verify.methods.validation(this.state.hashValue).send({\r\n        from: accounts[0]\r\n      });\r\n\r\n      Router.pushRoute(`/Academic/certificates/${this.state.hashValue}/success`);\r\n    } catch (err) {\r\n      this.setState({ errorMessage: err.message });\r\n    }\r\n    //this.setState({ message: 'A certificate has been verified!' })\r\n    this.setState({ loading: false });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Layout>\r\n        <script src=\"https://cdnjs.cloudflare.com/ajax/libs/crypto-js/3.1.9-1/crypto-js.js\"></script>\r\n        <h1>Verify Certificates</h1>\r\n        <Form>\r\n          <h3>Choose a JSON file</h3>\r\n          <input\r\n            type=\"file\"\r\n            onChange={this.onFileChange}\r\n            accept=\"application/json\"\r\n            style={{ marginBottom: 20 }}\r\n          />\r\n          {this.fileData()}\r\n          {/* <Link route={`/Academic/certificates/${this.hashValue}/success`}> */}\r\n            <a>\r\n              <Button\r\n                onClick={this.onClick}\r\n                content='Verify'\r\n                icon='check circle outline'\r\n                primary={true}\r\n                style={{ marginTop: 20 }}\r\n              />\r\n            </a>\r\n          {/* </Link> */}\r\n          <h1>{this.state.message}</h1>\r\n        </Form>\r\n      </Layout>\r\n    );\r\n  }\r\n}\r\n\r\nexport default CertificateIndex;"]},"metadata":{},"sourceType":"module"}