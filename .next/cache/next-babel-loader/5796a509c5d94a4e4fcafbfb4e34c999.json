{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nvar __jsx = React.createElement;\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component, useState } from 'react';\nimport { Link } from '../../routes';\nimport Navbar from 'react-bootstrap/Navbar';\nimport Nav from 'react-bootstrap/Nav';\nimport Container from 'react-bootstrap/Nav';\nimport Form from 'react-bootstrap/Form';\nimport FormControl from 'react-bootstrap/FormControl';\nimport Button from 'react-bootstrap/Button';\nimport DatePicker from \"react-datepicker\";\nimport web3 from '../../ethereum/web3';\nimport { Router } from '../../routes';\nimport vote from '../../ethereum/Vote/vote';\n\nvar Admin = /*#__PURE__*/function (_Component) {\n  _inherits(Admin, _Component);\n\n  var _super = _createSuper(Admin);\n\n  function Admin(props) {\n    var _this;\n\n    _classCallCheck(this, Admin);\n\n    _this = _super.call(this, props);\n    _this.state = {\n      register_start_date: new Date(),\n      register_end_date: new Date(),\n      vote_start_date: new Date(),\n      vote_end_date: new Date(),\n      requirement: '',\n      question: '',\n      option: '',\n      loading: false,\n      loading2: false,\n      search: '',\n      errorMessage: ''\n    }; //console.log(props.query.address);//擷取這個網址的url那part的address(from routes??)  \n\n    _this.submit_setting = _this.submit_setting.bind(_assertThisInitialized(_this));\n    _this.submit_option = _this.submit_option.bind(_assertThisInitialized(_this));\n    _this.refresh_search = _this.refresh_search.bind(_assertThisInitialized(_this)); //const [ register_start_date, setDate ] = useState(new Date());\n\n    return _this;\n  }\n\n  _createClass(Admin, [{\n    key: \"submit_setting\",\n    value: function () {\n      var _submit_setting = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(event) {\n        var Vote, _this$state, register_start_date, register_end_date, vote_start_date, vote_end_date, requirement, question, accounts;\n\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                event.preventDefault();\n                Vote = vote(this.props.address);\n                _this$state = this.state, register_start_date = _this$state.register_start_date, register_end_date = _this$state.register_end_date, vote_start_date = _this$state.vote_start_date, vote_end_date = _this$state.vote_end_date, requirement = _this$state.requirement, question = _this$state.question; //console.log(this.state.register_end_date.getTime());\n                //console.log(register_start_date);\n\n                this.setState({\n                  loading: true,\n                  errorMessage: ''\n                });\n                _context.prev = 4;\n                _context.next = 7;\n                return web3.eth.getAccounts();\n\n              case 7:\n                accounts = _context.sent;\n                _context.next = 10;\n                return Vote.methods.set_up_all(question, register_start_date.getTime(), register_end_date.getTime(), vote_start_date.getTime(), vote_end_date.getTime(), requirement).send({\n                  from: accounts[0]\n                });\n\n              case 10:\n                //Router.pushRoute(`/campaigns/${this.props.address}/requests`)\n                alert(\"Setting Successfully\");\n                _context.next = 16;\n                break;\n\n              case 13:\n                _context.prev = 13;\n                _context.t0 = _context[\"catch\"](4);\n                alert(_context.t0);\n\n              case 16:\n                this.setState({\n                  loading: false\n                });\n\n              case 17:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this, [[4, 13]]);\n      }));\n\n      function submit_setting(_x) {\n        return _submit_setting.apply(this, arguments);\n      }\n\n      return submit_setting;\n    }()\n  }, {\n    key: \"submit_option\",\n    value: function () {\n      var _submit_option = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(event) {\n        var Vote, option, accounts;\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                event.preventDefault();\n                Vote = vote(this.props.address);\n                option = this.state.option;\n                console.log(option);\n                this.setState({\n                  loading2: true\n                });\n                _context2.prev = 5;\n                _context2.next = 8;\n                return web3.eth.getAccounts();\n\n              case 8:\n                accounts = _context2.sent;\n                _context2.next = 11;\n                return Vote.methods.set_up_options(option.toString()).send({\n                  from: accounts[0]\n                });\n\n              case 11:\n                //Router.pushRoute(`/campaigns/${this.props.address}/requests`)\n                alert(\"Setting Option Successfully\");\n                _context2.next = 17;\n                break;\n\n              case 14:\n                _context2.prev = 14;\n                _context2.t0 = _context2[\"catch\"](5);\n                alert(_context2.t0);\n\n              case 17:\n                this.setState({\n                  loading: false\n                });\n\n              case 18:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this, [[5, 14]]);\n      }));\n\n      function submit_option(_x2) {\n        return _submit_option.apply(this, arguments);\n      }\n\n      return submit_option;\n    }()\n  }, {\n    key: \"refresh_search\",\n    value: function refresh_search() {\n      if (this.state.search != \"\") {\n        Router.pushRoute(\"/admin/\".concat(this.props.mb_addr, \"/\").concat(this.state.search));\n        console.log(this.props.address);\n      }\n    } //還可能要有顯示目前option的功能\n\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      //const [date, setDate] = useState(new Date());\n      return __jsx(React.Fragment, null, __jsx(\"link\", {\n        rel: \"stylesheet\",\n        href: \"https://maxcdn.bootstrapcdn.com/bootstrap/4.5.0/css/bootstrap.min.css\",\n        integrity: \"sha384-9aIt2nRpC12Uk9gS9baDl411NQApFmC26EwAOH8WgZl5MYYxFfc+NcPb1dKGj7Sk\",\n        crossOrigin: \"anonymous\"\n      }), __jsx(\"link\", {\n        rel: \"stylesheet\",\n        href: \"https://cdnjs.cloudflare.com/ajax/libs/react-datepicker/3.1.3/react-datepicker.min.css\",\n        integrity: \"sha512-Nc2rvPMo6xXLoInVUZRxo3qMVFCQ8o1PzK/9eGjutJvr0Y/PM6u4Gg5Rg3xO33jsAq9L4Uc/PM0bitnlOh0wpw==\",\n        crossorigin: \"anonymous\"\n      }), __jsx(Container, null, __jsx(Navbar, {\n        bg: \"dark\",\n        variant: \"dark\",\n        style: {\n          width: \"100%\"\n        }\n      }, __jsx(Navbar.Brand, null, __jsx(Link, {\n        route: \"/vote/\" + this.props.address\n      }, __jsx(\"a\", {\n        style: {\n          color: \"white\",\n          width: \"100px\"\n        }\n      }, \"Vote\"))), __jsx(Nav, {\n        className: \"mr-auto\",\n        style: {\n          width: \"50%\"\n        }\n      }, __jsx(Link, {\n        route: \"/home/\" + this.props.address\n      }, __jsx(\"a\", {\n        style: {\n          color: \"white\",\n          width: \"100px\"\n        }\n      }, \"Home\")), __jsx(Link, {\n        route: \"/status/\" + this.props.address\n      }, __jsx(\"a\", {\n        style: {\n          color: \"white\",\n          width: \"100px\"\n        }\n      }, \"Status\")), __jsx(Link, {\n        route: \"/index\"\n      }, __jsx(\"a\", {\n        style: {\n          color: \"white\",\n          width: \"100px\"\n        }\n      }, \"Logout\"))), __jsx(Form, {\n        inline: true\n      }, __jsx(\"div\", {\n        style: {\n          color: \"white\"\n        }\n      }, \" inesrt your vote contract address here  ->   \"), __jsx(FormControl, {\n        type: \"text\",\n        placeholder: \"Search\",\n        className: \"mr-sm-2\",\n        value: this.state.search,\n        onChange: function onChange(event) {\n          return _this2.setState({\n            search: event.target.value\n          });\n        }\n      }), __jsx(Button, {\n        variant: \"outline-info\",\n        onClick: this.refresh_search\n      }, \"Search\"))), __jsx(\"div\", {\n        style: {\n          margin: \"auto\"\n        }\n      }, __jsx(Form, {\n        style: {\n          margin: \"auto\",\n          marginTop: \"3%\"\n        },\n        onSubmit: this.submit_setting\n      }, __jsx(\"h2\", null, \"Edit Setting\"), __jsx(Form.Row, null, __jsx(Form.Group, {\n        as: \"new_vote\",\n        controlId: \"Issue\"\n      }, __jsx(Form.Label, null, \"The Issue you want to vote\"), __jsx(Form.Control, {\n        type: \"text\",\n        placeholder: \"Enter issue\",\n        value: this.state.question,\n        onChange: function onChange(event) {\n          return _this2.setState({\n            question: event.target.value\n          });\n        }\n      }))), __jsx(Form.Row, null, __jsx(Form.Group, {\n        as: \"register_start_date\",\n        controlId: \"register_start_date\"\n      }, __jsx(Form.Label, null, \"register_start_date\"), __jsx(DatePicker, {\n        selected: this.state.register_start_date,\n        onChange: function onChange(date) {\n          _this2.setState({\n            register_start_date: date\n          });\n        }\n      })), __jsx(Form.Group, {\n        as: \"register_end_date\",\n        controlId: \"register_end_date\"\n      }, __jsx(Form.Label, null, \"register_end_date\"), __jsx(DatePicker, {\n        selected: this.state.register_end_date,\n        onChange: function onChange(date) {\n          _this2.setState({\n            register_end_date: date\n          });\n        }\n      }))), __jsx(Form.Row, null, __jsx(Form.Group, {\n        as: \"vote_start_date\",\n        controlId: \"vote_start_date\"\n      }, __jsx(Form.Label, null, \"vote_start_date\"), __jsx(DatePicker, {\n        selected: this.state.vote_start_date,\n        onChange: function onChange(date) {\n          _this2.setState({\n            vote_start_date: date\n          });\n        }\n      })), __jsx(Form.Group, {\n        as: \"vote_end_date\",\n        controlId: \"vote_end_date\"\n      }, __jsx(Form.Label, null, \"vote_end_date\"), __jsx(DatePicker, {\n        selected: this.state.vote_end_date,\n        onChange: function onChange(date) {\n          _this2.setState({\n            vote_end_date: date\n          });\n        }\n      }))), __jsx(Form.Row, null, __jsx(Form.Group, {\n        as: \"requirement\",\n        controlId: \"requirement\"\n      }, __jsx(Form.Label, null, \"vote requirement\"), __jsx(Form.Control, {\n        type: \"text\",\n        placeholder: \"Enter requirement\",\n        value: this.state.requirement,\n        onChange: function onChange(event) {\n          return _this2.setState({\n            requirement: event.target.value\n          });\n        }\n      }))), __jsx(Button, {\n        variant: \"primary\",\n        type: \"submit\"\n      }, \"Setting\")), __jsx(Form, {\n        style: {\n          margin: \"auto\",\n          marginTop: \"3%\"\n        },\n        onSubmit: this.submit_option\n      }, __jsx(\"h2\", null, \"Set options one by one\"), __jsx(Form.Row, null, __jsx(Form.Group, {\n        controlId: \"option\"\n      }, __jsx(Form.Label, null, \"option\"), console.log(this.props.options), this.props.options.map(function (option) {\n        return __jsx(\"h3\", null, option);\n      }), __jsx(Form.Control, {\n        type: \"text\",\n        placeholder: \"option\",\n        value: this.state.option,\n        onChange: function onChange(event) {\n          return _this2.setState({\n            option: event.target.value\n          });\n        }\n      }))), __jsx(Button, {\n        variant: \"primary\",\n        type: \"submit\"\n      }, \"Set options\")))));\n    }\n  }], [{\n    key: \"getInitialProps\",\n    value: function () {\n      var _getInitialProps = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3(props) {\n        var _props$query, address, mb_addr, Vote_event, option_length, options, index, temp;\n\n        return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                _props$query = props.query, address = _props$query.address, mb_addr = _props$query.mb_addr;\n                _context3.next = 3;\n                return vote(address);\n\n              case 3:\n                Vote_event = _context3.sent;\n                _context3.next = 6;\n                return Vote_event.methods.return_options_length().call();\n\n              case 6:\n                option_length = _context3.sent;\n                options = [];\n                index = 0;\n\n              case 9:\n                if (!(index < option_length)) {\n                  _context3.next = 17;\n                  break;\n                }\n\n                _context3.next = 12;\n                return Vote_event.methods.return_options(index).call();\n\n              case 12:\n                temp = _context3.sent;\n                options.push(temp);\n\n              case 14:\n                index++;\n                _context3.next = 9;\n                break;\n\n              case 17:\n                console.log(options);\n                return _context3.abrupt(\"return\", {\n                  address: address,\n                  mb_addr: mb_addr,\n                  options: options\n                });\n\n              case 19:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3);\n      }));\n\n      function getInitialProps(_x3) {\n        return _getInitialProps.apply(this, arguments);\n      }\n\n      return getInitialProps;\n    }()\n  }]);\n\n  return Admin;\n}(Component);\n\nexport default Admin;","map":{"version":3,"sources":["C:/Users/suvin/vincent/Dapp/nextjs-web/pages/Vote/admin.js"],"names":["React","Component","useState","Link","Navbar","Nav","Container","Form","FormControl","Button","DatePicker","web3","Router","vote","Admin","props","state","register_start_date","Date","register_end_date","vote_start_date","vote_end_date","requirement","question","option","loading","loading2","search","errorMessage","submit_setting","bind","submit_option","refresh_search","event","preventDefault","Vote","address","setState","eth","getAccounts","accounts","methods","set_up_all","getTime","send","from","alert","console","log","set_up_options","toString","pushRoute","mb_addr","width","color","target","value","margin","marginTop","date","options","map","query","Vote_event","return_options_length","call","option_length","index","return_options","temp","push"],"mappings":"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","sourcesContent":["import React, { Component,useState } from 'react';\r\nimport{Link}from '../../routes';\r\n\r\nimport Navbar from 'react-bootstrap/Navbar';\r\nimport Nav from 'react-bootstrap/Nav';\r\nimport Container from 'react-bootstrap/Nav';\r\nimport Form from 'react-bootstrap/Form';\r\nimport FormControl from 'react-bootstrap/FormControl';\r\nimport Button from 'react-bootstrap/Button';\r\nimport DatePicker from \"react-datepicker\";\r\n\r\nimport web3 from '../../ethereum/web3'\r\nimport {Router}from '../../routes';\r\nimport vote from '../../ethereum/Vote/vote';\r\n\r\n\r\nclass Admin extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state ={\r\n          register_start_date:new Date(),\r\n          register_end_date:new Date(),\r\n          vote_start_date:new Date(),\r\n          vote_end_date:new Date(),\r\n          requirement:'',\r\n          question:'',\r\n          option:'',\r\n          loading : false,\r\n          loading2: false,\r\n          search:'',\r\n          errorMessage:''\r\n        };\r\n      //console.log(props.query.address);//擷取這個網址的url那part的address(from routes??)  \r\n      this.submit_setting = this.submit_setting.bind(this);\r\n      this.submit_option = this.submit_option.bind(this);\r\n      this.refresh_search = this.refresh_search.bind(this);\r\n      //const [ register_start_date, setDate ] = useState(new Date());\r\n      }\r\n    static async getInitialProps(props){\r\n        const{address,mb_addr} = props.query;\r\n        const Vote_event =await vote(address);\r\n        const option_length = await Vote_event.methods.return_options_length().call();\r\n        var options = [];\r\n        for (let index = 0; index < option_length; index++) {\r\n            let temp = await Vote_event.methods.return_options(index).call();\r\n            options.push(temp);\r\n        }\r\n        console.log(options)\r\n        return{address,mb_addr,options};\r\n    }\r\n    async submit_setting(event){\r\n        event.preventDefault();\r\n\r\n        const Vote = vote(this.props.address);\r\n\r\n        const {register_start_date,register_end_date,vote_start_date,vote_end_date,requirement,question} = this.state;\r\n        //console.log(this.state.register_end_date.getTime());\r\n        //console.log(register_start_date);\r\n        this.setState({loading:true,errorMessage:''});\r\n        \r\n        try{\r\n            const accounts = await web3.eth.getAccounts();\r\n            await Vote.methods.set_up_all(\r\n                question,\r\n                register_start_date.getTime(),\r\n                register_end_date.getTime(),\r\n                vote_start_date.getTime(),\r\n                vote_end_date.getTime(),\r\n                requirement\r\n            ).send(\r\n                {from:accounts[0]}\r\n            );\r\n            //Router.pushRoute(`/campaigns/${this.props.address}/requests`)\r\n            alert(\"Setting Successfully\")\r\n        }catch(err){\r\n            alert(err);\r\n        }\r\n        this.setState({loading:false});\r\n    }\r\n    async submit_option(event){\r\n        event.preventDefault();\r\n\r\n        const Vote = vote(this.props.address);\r\n\r\n        const {option} = this.state;\r\n        \r\n        console.log(option);\r\n        this.setState({loading2:true});\r\n        \r\n        try{\r\n            const accounts = await web3.eth.getAccounts();\r\n            await Vote.methods.set_up_options(\r\n                option.toString()\r\n            ).send(\r\n                {from:accounts[0]}\r\n            );\r\n            //Router.pushRoute(`/campaigns/${this.props.address}/requests`)\r\n            alert(\"Setting Option Successfully\")\r\n        }catch(err){\r\n            alert(err);\r\n        }\r\n        this.setState({loading:false});\r\n    }\r\n    refresh_search(){\r\n        if(this.state.search != \"\"){\r\n        Router.pushRoute(`/admin/${this.props.mb_addr}/${this.state.search}`);\r\n        console.log(this.props.address);\r\n        }\r\n    }\r\n    //還可能要有顯示目前option的功能\r\n    render() {\r\n        //const [date, setDate] = useState(new Date());\r\n        return(\r\n        <>\r\n         <link rel=\"stylesheet\" href=\"https://maxcdn.bootstrapcdn.com/bootstrap/4.5.0/css/bootstrap.min.css\" integrity=\"sha384-9aIt2nRpC12Uk9gS9baDl411NQApFmC26EwAOH8WgZl5MYYxFfc+NcPb1dKGj7Sk\" crossOrigin=\"anonymous\"/>\r\n         <link rel=\"stylesheet\" href=\"https://cdnjs.cloudflare.com/ajax/libs/react-datepicker/3.1.3/react-datepicker.min.css\" integrity=\"sha512-Nc2rvPMo6xXLoInVUZRxo3qMVFCQ8o1PzK/9eGjutJvr0Y/PM6u4Gg5Rg3xO33jsAq9L4Uc/PM0bitnlOh0wpw==\" crossorigin=\"anonymous\" />\r\n         <Container>\r\n         <Navbar bg=\"dark\" variant=\"dark\"style={{width:\"100%\"}}>\r\n            <Navbar.Brand ><Link route={\"/vote/\"+this.props.address } ><a style={{color: \"white\", width:\"100px\"}}>Vote</a></Link></Navbar.Brand>\r\n             <Nav className=\"mr-auto\" style={{width:\"50%\"}}>\r\n                <Link route={\"/home/\"+this.props.address }><a style={{color: \"white\", width:\"100px\"}}>Home</a></Link>\r\n                <Link route={\"/status/\"+this.props.address } ><a style={{color: \"white\", width:\"100px\"}}>Status</a></Link>\r\n                <Link route={\"/index\" }  ><a style={{color: \"white\", width:\"100px\"}}>Logout</a></Link>\r\n             </Nav>\r\n            <Form inline>\r\n            <div style={{color : \"white\"}} > inesrt your vote contract address here  -&gt;   </div>\r\n            <FormControl type=\"text\" placeholder=\"Search\" className=\"mr-sm-2\" \r\n                value={this.state.search} \r\n                onChange = {event => this.setState({search:event.target.value})} />\r\n            <Button variant=\"outline-info\" onClick={this.refresh_search}>Search</Button>\r\n            </Form>\r\n        </Navbar>\r\n        <div style={{margin:\"auto\"}}>\r\n        <Form style={{ margin :\"auto\",marginTop :\"3%\"}} onSubmit = {this.submit_setting}>\r\n        <h2>Edit Setting</h2>\r\n            <Form.Row>\r\n                <Form.Group as=\"new_vote\" controlId=\"Issue\">\r\n                <Form.Label>The Issue you want to vote</Form.Label>\r\n                <Form.Control type=\"text\" placeholder=\"Enter issue\" \r\n                    value={this.state.question} \r\n                    onChange = {event => this.setState({question:event.target.value})} \r\n                />\r\n                </Form.Group>\r\n\r\n            </Form.Row>{/*\r\n            <Form.Row>\r\n                <Form.Group as=\"gap\" controlId=\"gap\">\r\n                <Form.Label>gap time</Form.Label>\r\n                <Form.Control type=\"number\" placeholder=\"Enter gap time\" />\r\n                </Form.Group>\r\n                <Form.Group as=\"entrance_fee\" controlId=\"entrance_fee\">\r\n                <Form.Label>entrance fee</Form.Label>\r\n                <Form.Control type=\"number\" placeholder=\"entrance fee\" />\r\n                </Form.Group>\r\n            </Form.Row>*/}\r\n            <Form.Row>\r\n                \r\n                <Form.Group as=\"register_start_date\" controlId=\"register_start_date\">\r\n                <Form.Label>register_start_date</Form.Label>\r\n                <DatePicker selected={this.state.register_start_date} \r\n                            onChange={date => {this.setState({register_start_date: date})}}/>\r\n                </Form.Group>\r\n                <Form.Group as=\"register_end_date\"  controlId=\"register_end_date\">\r\n                <Form.Label>register_end_date</Form.Label>\r\n                <DatePicker selected={this.state.register_end_date} \r\n                            onChange={date => {this.setState({register_end_date: date})}} />\r\n                </Form.Group>\r\n            </Form.Row>\r\n\r\n            <Form.Row>\r\n                \r\n                <Form.Group as=\"vote_start_date\" controlId=\"vote_start_date\">\r\n                <Form.Label>vote_start_date</Form.Label>\r\n                <DatePicker selected={this.state.vote_start_date} \r\n                            onChange={date => {this.setState({vote_start_date: date})}} />\r\n                </Form.Group>\r\n                <Form.Group as=\"vote_end_date\"  controlId=\"vote_end_date\">\r\n                <Form.Label>vote_end_date</Form.Label>\r\n                <DatePicker selected={this.state.vote_end_date} \r\n                            onChange={date => {this.setState({vote_end_date: date})}} />\r\n                </Form.Group>\r\n            </Form.Row>\r\n\r\n            <Form.Row>\r\n            <Form.Group as=\"requirement\" controlId=\"requirement\">\r\n                <Form.Label>vote requirement</Form.Label>\r\n                <Form.Control type=\"text\" placeholder=\"Enter requirement\" \r\n                    value={this.state.requirement} \r\n                    onChange = {event => this.setState({requirement:event.target.value})}\r\n                />\r\n                </Form.Group>\r\n                    \r\n            </Form.Row>\r\n\r\n            <Button variant=\"primary\" type=\"submit\">\r\n                Setting\r\n            </Button>\r\n        </Form>\r\n        \r\n        <Form style={{ margin :\"auto\",marginTop :\"3%\"}} onSubmit = {this.submit_option}>\r\n        <h2>Set options one by one</h2>\r\n            <Form.Row>\r\n                <Form.Group controlId=\"option\">\r\n                    <Form.Label>option</Form.Label>\r\n                    {console.log(this.props.options)}\r\n                        {this.props.options.map(option =><h3>{option}</h3>)}\r\n                    <Form.Control type=\"text\" placeholder=\"option\" \r\n                        value={this.state.option} \r\n                        onChange = {event => this.setState({option:event.target.value})}\r\n                    />\r\n                </Form.Group>\r\n            </Form.Row>\r\n            <Button variant=\"primary\" type=\"submit\">\r\n                Set options\r\n            </Button>\r\n            </Form>\r\n            </div>\r\n      </Container>\r\n        </>\r\n    )\r\n    }\r\n}\r\n\r\n\r\nexport default Admin;"]},"metadata":{},"sourceType":"module"}