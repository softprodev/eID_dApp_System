{"ast":null,"code":"var __jsx = React.createElement;\nimport React, { Component, useState } from 'react';\nimport { Link } from '../routes';\nimport Navbar from 'react-bootstrap/Navbar';\nimport Nav from 'react-bootstrap/Nav';\nimport Container from 'react-bootstrap/Nav';\nimport Form from 'react-bootstrap/Form';\nimport FormControl from 'react-bootstrap/FormControl';\nimport Button from 'react-bootstrap/Button';\nimport DatePicker from \"react-datepicker\";\nimport web3 from '../ethereum/web3';\nimport { Router } from '../routes';\nimport vote from '../ethereum/vote';\n\nclass admin extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      register_start_date: new Date(),\n      register_end_date: new Date(),\n      vote_start_date: new Date(),\n      vote_end_date: new Date(),\n      requirement: '',\n      question: '',\n      option: '',\n      loading: false,\n      loading2: false,\n      errorMessage: ''\n    }; //console.log(props.query.address);//擷取這個網址的url那part的address(from routes??)  \n\n    this.submit_setting = this.submit_setting.bind(this);\n    this.submit_option = this.submit_option.bind(this); //const [ register_start_date, setDate ] = useState(new Date());\n  }\n\n  static async getInitialProps(props) {\n    const {\n      address\n    } = props.query;\n    return {\n      address\n    };\n  }\n\n  async submit_setting(event) {\n    event.preventDefault();\n    const Vote = vote(this.props.address);\n    const {\n      register_start_date,\n      register_end_date,\n      vote_start_date,\n      vote_end_date,\n      requirement,\n      question\n    } = this.state; //console.log(this.state.register_end_date.getTime());\n    //console.log(register_start_date);\n\n    this.setState({\n      loading: true,\n      errorMessage: ''\n    });\n\n    try {\n      const accounts = await web3.eth.getAccounts();\n      await Vote.methods.set_up_all(question, register_start_date.getTime(), register_end_date.getTime(), vote_start_date.getTime(), vote_end_date.getTime(), requirement).send({\n        from: accounts[0]\n      }); //Router.pushRoute(`/campaigns/${this.props.address}/requests`)\n\n      alert(\"Setting Successfully\");\n    } catch (err) {\n      alert(err);\n    }\n\n    this.setState({\n      loading: false\n    });\n  }\n\n  async submit_option() {\n    event.preventDefault();\n    const Vote = vote(this.props.address);\n    const {\n      option\n    } = this.state; //console.log(this.state.register_end_date.getTime());\n    //console.log(register_start_date);\n\n    this.setState({\n      loading2: true\n    });\n\n    try {\n      const accounts = await web3.eth.getAccounts();\n      await Vote.methods.set_up_options().send({\n        from: accounts[0]\n      }); //Router.pushRoute(`/campaigns/${this.props.address}/requests`)\n\n      alert(\"Setting Option Successfully\");\n    } catch (err) {\n      alert(err);\n    }\n\n    this.setState({\n      loading: false\n    });\n  } //還可能要有顯示目前option的功能\n\n\n  render() {\n    //const [date, setDate] = useState(new Date());\n    return __jsx(React.Fragment, null, __jsx(\"link\", {\n      rel: \"stylesheet\",\n      href: \"https://maxcdn.bootstrapcdn.com/bootstrap/4.5.0/css/bootstrap.min.css\",\n      integrity: \"sha384-9aIt2nRpC12Uk9gS9baDl411NQApFmC26EwAOH8WgZl5MYYxFfc+NcPb1dKGj7Sk\",\n      crossOrigin: \"anonymous\"\n    }), __jsx(\"link\", {\n      rel: \"stylesheet\",\n      href: \"https://cdnjs.cloudflare.com/ajax/libs/react-datepicker/3.1.3/react-datepicker.min.css\",\n      integrity: \"sha512-Nc2rvPMo6xXLoInVUZRxo3qMVFCQ8o1PzK/9eGjutJvr0Y/PM6u4Gg5Rg3xO33jsAq9L4Uc/PM0bitnlOh0wpw==\",\n      crossorigin: \"anonymous\"\n    }), __jsx(Container, null, __jsx(Navbar, {\n      bg: \"dark\",\n      variant: \"dark\",\n      style: {\n        width: \"100%\"\n      }\n    }, __jsx(Navbar.Brand, null, __jsx(Link, {\n      route: \"/vote\"\n    }, __jsx(\"a\", {\n      style: {\n        color: \"white\",\n        width: \"100px\"\n      }\n    }, \"Vote\"))), __jsx(Nav, {\n      className: \"mr-auto\",\n      style: {\n        width: \"50%\"\n      }\n    }, __jsx(Link, {\n      route: \"/home\"\n    }, __jsx(\"a\", {\n      style: {\n        color: \"white\",\n        width: \"100px\"\n      }\n    }, \"Home\")), __jsx(Link, {\n      route: \"/status\"\n    }, __jsx(\"a\", {\n      style: {\n        color: \"white\",\n        width: \"100px\"\n      }\n    }, \"Status\"))), __jsx(Form, {\n      inline: true\n    }, __jsx(\"div\", {\n      style: {\n        color: \"white\"\n      }\n    }, \" inesrt your vote contract address here  ->   \"), __jsx(FormControl, {\n      type: \"text\",\n      placeholder: \"Search\",\n      className: \"mr-sm-2\"\n    }), __jsx(Button, {\n      variant: \"outline-info\"\n    }, \"Search\"))), __jsx(\"div\", {\n      style: {\n        margin: \"auto\"\n      }\n    }, __jsx(Form, {\n      style: {\n        margin: \"auto\",\n        marginTop: \"3%\"\n      },\n      onSubmit: this.submit_setting\n    }, __jsx(\"h2\", null, \"Edit Setting\"), __jsx(Form.Row, null, __jsx(Form.Group, {\n      as: \"new_vote\",\n      controlId: \"Issue\"\n    }, __jsx(Form.Label, null, \"The Issue you want to vote\"), __jsx(Form.Control, {\n      type: \"text\",\n      placeholder: \"Enter issue\",\n      value: this.state.question,\n      onChange: event => this.setState({\n        question: event.target.value\n      })\n    }))), __jsx(Form.Row, null, __jsx(Form.Group, {\n      as: \"register_start_date\",\n      controlId: \"register_start_date\"\n    }, __jsx(Form.Label, null, \"register_start_date\"), __jsx(DatePicker, {\n      selected: this.state.register_start_date,\n      onChange: date => {\n        this.setState({\n          register_start_date: date\n        });\n      }\n    })), __jsx(Form.Group, {\n      as: \"register_end_date\",\n      controlId: \"register_end_date\"\n    }, __jsx(Form.Label, null, \"register_end_date\"), __jsx(DatePicker, {\n      selected: this.state.register_end_date,\n      onChange: date => {\n        this.setState({\n          register_end_date: date\n        });\n      }\n    }))), __jsx(Form.Row, null, __jsx(Form.Group, {\n      as: \"vote_start_date\",\n      controlId: \"vote_start_date\"\n    }, __jsx(Form.Label, null, \"vote_start_date\"), __jsx(DatePicker, {\n      selected: this.state.vote_start_date,\n      onChange: date => {\n        this.setState({\n          vote_start_date: date\n        });\n      }\n    })), __jsx(Form.Group, {\n      as: \"vote_end_date\",\n      controlId: \"vote_end_date\"\n    }, __jsx(Form.Label, null, \"vote_end_date\"), __jsx(DatePicker, {\n      selected: this.state.vote_end_date,\n      onChange: date => {\n        this.setState({\n          vote_end_date: date\n        });\n      }\n    }))), __jsx(Form.Row, null, __jsx(Form.Group, {\n      as: \"requirement\",\n      controlId: \"requirement\"\n    }, __jsx(Form.Label, null, \"vote requirement\"), __jsx(Form.Control, {\n      type: \"text\",\n      placeholder: \"Enter requirement\",\n      value: this.state.requirement,\n      onChange: event => this.setState({\n        requirement: event.target.value\n      })\n    }))), __jsx(Button, {\n      variant: \"primary\",\n      type: \"submit\"\n    }, \"Setting\")), __jsx(Form, {\n      style: {\n        margin: \"auto\",\n        marginTop: \"3%\"\n      },\n      onSubmit: this.submit_setting\n    }, __jsx(\"h2\", null, \"Set options one by one\"), __jsx(Form.Row, null, __jsx(Form.Group, {\n      controlId: \"option\"\n    }, __jsx(Form.Label, null, \"option\"), __jsx(Form.Control, {\n      type: \"text\",\n      placeholder: \"option\",\n      value: this.state.option,\n      onChange: event => this.setState({\n        option: event.target.value\n      })\n    }))), __jsx(Button, {\n      variant: \"primary\",\n      type: \"submit\"\n    }, \"Set options\")))));\n  }\n\n}\n\nexport default admin;","map":{"version":3,"sources":["/Users/suvincent/vote-web/pages/admin.js"],"names":["React","Component","useState","Link","Navbar","Nav","Container","Form","FormControl","Button","DatePicker","web3","Router","vote","admin","constructor","props","state","register_start_date","Date","register_end_date","vote_start_date","vote_end_date","requirement","question","option","loading","loading2","errorMessage","submit_setting","bind","submit_option","getInitialProps","address","query","event","preventDefault","Vote","setState","accounts","eth","getAccounts","methods","set_up_all","getTime","send","from","alert","err","set_up_options","render","width","color","margin","marginTop","target","value","date"],"mappings":"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","sourcesContent":["import React, { Component,useState } from 'react';\r\nimport{Link}from '../routes';\r\n\r\nimport Navbar from 'react-bootstrap/Navbar';\r\nimport Nav from 'react-bootstrap/Nav';\r\nimport Container from 'react-bootstrap/Nav';\r\nimport Form from 'react-bootstrap/Form';\r\nimport FormControl from 'react-bootstrap/FormControl';\r\nimport Button from 'react-bootstrap/Button';\r\nimport DatePicker from \"react-datepicker\";\r\n\r\nimport web3 from '../ethereum/web3'\r\nimport {Router}from '../routes';\r\nimport vote from '../ethereum/vote';\r\n\r\n\r\nclass admin extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state ={\r\n          register_start_date:new Date(),\r\n          register_end_date:new Date(),\r\n          vote_start_date:new Date(),\r\n          vote_end_date:new Date(),\r\n          requirement:'',\r\n          question:'',\r\n          option:'',\r\n          loading : false,\r\n          loading2: false,\r\n          errorMessage:''\r\n        };\r\n      //console.log(props.query.address);//擷取這個網址的url那part的address(from routes??)  \r\n      this.submit_setting = this.submit_setting.bind(this);\r\n      this.submit_option = this.submit_option.bind(this);\r\n      //const [ register_start_date, setDate ] = useState(new Date());\r\n      }\r\n    static async getInitialProps(props){\r\n        const{address} = props.query;\r\n        return{address};\r\n    }\r\n    async submit_setting(event){\r\n        event.preventDefault();\r\n\r\n        const Vote = vote(this.props.address);\r\n\r\n        const {register_start_date,register_end_date,vote_start_date,vote_end_date,requirement,question} = this.state;\r\n        //console.log(this.state.register_end_date.getTime());\r\n        //console.log(register_start_date);\r\n        this.setState({loading:true,errorMessage:''});\r\n        \r\n        try{\r\n            const accounts = await web3.eth.getAccounts();\r\n            await Vote.methods.set_up_all(\r\n                question,\r\n                register_start_date.getTime(),\r\n                register_end_date.getTime(),\r\n                vote_start_date.getTime(),\r\n                vote_end_date.getTime(),\r\n                requirement\r\n            ).send(\r\n                {from:accounts[0]}\r\n            );\r\n            //Router.pushRoute(`/campaigns/${this.props.address}/requests`)\r\n            alert(\"Setting Successfully\")\r\n        }catch(err){\r\n            alert(err);\r\n        }\r\n        this.setState({loading:false});\r\n    }\r\n    async submit_option(){\r\n        event.preventDefault();\r\n\r\n        const Vote = vote(this.props.address);\r\n\r\n        const {option} = this.state;\r\n        //console.log(this.state.register_end_date.getTime());\r\n        //console.log(register_start_date);\r\n        this.setState({loading2:true});\r\n        \r\n        try{\r\n            const accounts = await web3.eth.getAccounts();\r\n            await Vote.methods.set_up_options(\r\n                \r\n            ).send(\r\n                {from:accounts[0]}\r\n            );\r\n            //Router.pushRoute(`/campaigns/${this.props.address}/requests`)\r\n            alert(\"Setting Option Successfully\")\r\n        }catch(err){\r\n            alert(err);\r\n        }\r\n        this.setState({loading:false});\r\n    }\r\n    //還可能要有顯示目前option的功能\r\n    render() {\r\n        //const [date, setDate] = useState(new Date());\r\n        return(\r\n        <>\r\n         <link rel=\"stylesheet\" href=\"https://maxcdn.bootstrapcdn.com/bootstrap/4.5.0/css/bootstrap.min.css\" integrity=\"sha384-9aIt2nRpC12Uk9gS9baDl411NQApFmC26EwAOH8WgZl5MYYxFfc+NcPb1dKGj7Sk\" crossOrigin=\"anonymous\"/>\r\n         <link rel=\"stylesheet\" href=\"https://cdnjs.cloudflare.com/ajax/libs/react-datepicker/3.1.3/react-datepicker.min.css\" integrity=\"sha512-Nc2rvPMo6xXLoInVUZRxo3qMVFCQ8o1PzK/9eGjutJvr0Y/PM6u4Gg5Rg3xO33jsAq9L4Uc/PM0bitnlOh0wpw==\" crossorigin=\"anonymous\" />\r\n         <Container>\r\n         <Navbar bg=\"dark\" variant=\"dark\"style={{width:\"100%\"}}>\r\n            <Navbar.Brand ><Link route=\"/vote\" ><a style={{color: \"white\", width:\"100px\"}}>Vote</a></Link></Navbar.Brand>\r\n             <Nav className=\"mr-auto\" style={{width:\"50%\"}}>\r\n                <Link route=\"/home\" ><a style={{color: \"white\", width:\"100px\"}}>Home</a></Link>\r\n                <Link route=\"/status\" ><a style={{color: \"white\", width:\"100px\"}}>Status</a></Link>\r\n             </Nav>\r\n            <Form inline>\r\n            <div style={{color : \"white\"}} > inesrt your vote contract address here  -&gt;   </div>\r\n            <FormControl type=\"text\" placeholder=\"Search\" className=\"mr-sm-2\" />\r\n            <Button variant=\"outline-info\">Search</Button>\r\n            </Form>\r\n        </Navbar>\r\n        <div style={{margin:\"auto\"}}>\r\n        <Form style={{ margin :\"auto\",marginTop :\"3%\"}} onSubmit = {this.submit_setting}>\r\n        <h2>Edit Setting</h2>\r\n            <Form.Row>\r\n                <Form.Group as=\"new_vote\" controlId=\"Issue\">\r\n                <Form.Label>The Issue you want to vote</Form.Label>\r\n                <Form.Control type=\"text\" placeholder=\"Enter issue\" \r\n                    value={this.state.question} \r\n                    onChange = {event => this.setState({question:event.target.value})} \r\n                />\r\n                </Form.Group>\r\n\r\n            </Form.Row>{/*\r\n            <Form.Row>\r\n                <Form.Group as=\"gap\" controlId=\"gap\">\r\n                <Form.Label>gap time</Form.Label>\r\n                <Form.Control type=\"number\" placeholder=\"Enter gap time\" />\r\n                </Form.Group>\r\n                <Form.Group as=\"entrance_fee\" controlId=\"entrance_fee\">\r\n                <Form.Label>entrance fee</Form.Label>\r\n                <Form.Control type=\"number\" placeholder=\"entrance fee\" />\r\n                </Form.Group>\r\n            </Form.Row>*/}\r\n            <Form.Row>\r\n                \r\n                <Form.Group as=\"register_start_date\" controlId=\"register_start_date\">\r\n                <Form.Label>register_start_date</Form.Label>\r\n                <DatePicker selected={this.state.register_start_date} \r\n                            onChange={date => {this.setState({register_start_date: date})}}/>\r\n                </Form.Group>\r\n                <Form.Group as=\"register_end_date\"  controlId=\"register_end_date\">\r\n                <Form.Label>register_end_date</Form.Label>\r\n                <DatePicker selected={this.state.register_end_date} \r\n                            onChange={date => {this.setState({register_end_date: date})}} />\r\n                </Form.Group>\r\n            </Form.Row>\r\n\r\n            <Form.Row>\r\n                \r\n                <Form.Group as=\"vote_start_date\" controlId=\"vote_start_date\">\r\n                <Form.Label>vote_start_date</Form.Label>\r\n                <DatePicker selected={this.state.vote_start_date} \r\n                            onChange={date => {this.setState({vote_start_date: date})}} />\r\n                </Form.Group>\r\n                <Form.Group as=\"vote_end_date\"  controlId=\"vote_end_date\">\r\n                <Form.Label>vote_end_date</Form.Label>\r\n                <DatePicker selected={this.state.vote_end_date} \r\n                            onChange={date => {this.setState({vote_end_date: date})}} />\r\n                </Form.Group>\r\n            </Form.Row>\r\n\r\n            <Form.Row>\r\n            <Form.Group as=\"requirement\" controlId=\"requirement\">\r\n                <Form.Label>vote requirement</Form.Label>\r\n                <Form.Control type=\"text\" placeholder=\"Enter requirement\" \r\n                    value={this.state.requirement} \r\n                    onChange = {event => this.setState({requirement:event.target.value})}\r\n                />\r\n                </Form.Group>\r\n                    \r\n            </Form.Row>\r\n\r\n            <Button variant=\"primary\" type=\"submit\">\r\n                Setting\r\n            </Button>\r\n        </Form>\r\n        \r\n        <Form style={{ margin :\"auto\",marginTop :\"3%\"}} onSubmit = {this.submit_setting}>\r\n        <h2>Set options one by one</h2>\r\n            <Form.Row>\r\n                <Form.Group controlId=\"option\">\r\n                    <Form.Label>option</Form.Label>\r\n                    <Form.Control type=\"text\" placeholder=\"option\" \r\n                        value={this.state.option} \r\n                        onChange = {event => this.setState({option:event.target.value})}\r\n                    />\r\n                </Form.Group>\r\n            </Form.Row>\r\n            <Button variant=\"primary\" type=\"submit\">\r\n                Set options\r\n            </Button>\r\n            </Form>\r\n            </div>\r\n      </Container>\r\n        </>\r\n    )\r\n    }\r\n}\r\n\r\n\r\nexport default admin;"]},"metadata":{},"sourceType":"module"}