{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nvar __jsx = React.createElement;\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport { Link } from '../../routes';\nimport Navbar from 'react-bootstrap/Navbar';\nimport Nav from 'react-bootstrap/Nav';\nimport Container from 'react-bootstrap/Nav';\nimport Form from 'react-bootstrap/Form';\nimport FormControl from 'react-bootstrap/FormControl';\nimport Button from 'react-bootstrap/Button';\nimport { Card, Table } from 'react-bootstrap';\nimport ReactShadowScroll from 'react-shadow-scroll';\nimport web3 from '../../ethereum/web3';\nimport { Router } from '../../routes';\nimport vote from '../../ethereum/Vote/vote';\n\nvar Status = /*#__PURE__*/function (_Component) {\n  _inherits(Status, _Component);\n\n  var _super = _createSuper(Status);\n\n  function Status(props) {\n    var _this;\n\n    _classCallCheck(this, Status);\n\n    _this = _super.call(this, props);\n    _this.state = {\n      // Mb_addr :props.query.address,\n      search: \"\",\n      loading: false,\n      loading2: false,\n      errorMessage: ''\n    };\n    _this.refresh_search = _this.refresh_search.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(Status, [{\n    key: \"refresh_search\",\n    value: function refresh_search() {\n      if (this.state.search != \"\") Router.pushRoute(\"/Vote/status/\".concat(this.state.search)); //console.log(this.props.address);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return __jsx(React.Fragment, null, __jsx(\"link\", {\n        rel: \"stylesheet\",\n        href: \"https://maxcdn.bootstrapcdn.com/bootstrap/4.5.0/css/bootstrap.min.css\",\n        integrity: \"sha384-9aIt2nRpC12Uk9gS9baDl411NQApFmC26EwAOH8WgZl5MYYxFfc+NcPb1dKGj7Sk\",\n        crossorigin: \"anonymous\"\n      }), __jsx(Container, null, __jsx(Navbar, {\n        bg: \"dark\",\n        variant: \"dark\",\n        style: {\n          width: \"100%\"\n        }\n      }, __jsx(Navbar.Brand, null, \"Vote\"), console.log(this.props.options), __jsx(Nav, {\n        className: \"mr-auto\"\n      }, __jsx(Link, {\n        route: \"/Vote/home/\" + this.props.mb_addr\n      }, __jsx(\"a\", {\n        style: {\n          color: \"white\",\n          width: \"100px\"\n        }\n      }, \"Home\")), __jsx(Link, {\n        route: \"/Vote/status/\" + this.props.mb_addr + \"/\" + this.props.address\n      }, __jsx(\"a\", {\n        style: {\n          color: \"white\",\n          width: \"100px\"\n        }\n      }, \"Vote\")), __jsx(Link, {\n        route: \"/Vote/index\"\n      }, __jsx(\"a\", {\n        style: {\n          color: \"white\",\n          width: \"100px\"\n        }\n      }, \"Logout\"))), __jsx(Form, {\n        inline: true,\n        style: {\n          margin: \"auto\"\n        }\n      }, __jsx(\"div\", {\n        style: {\n          color: \"white\"\n        }\n      }, \" inesrt your vote contract address here  ->   \"), __jsx(FormControl, {\n        type: \"text\",\n        placeholder: \"Search\",\n        className: \"mr-sm-2\",\n        value: this.state.search,\n        onChange: function onChange(event) {\n          return _this2.setState({\n            search: event.target.value\n          });\n        }\n      }), __jsx(Button, {\n        variant: \"outline-info\",\n        onClick: this.refresh_search\n      }, \"Search\"))), __jsx(Card, {\n        style: {\n          width: '46%',\n          margin: '1.5%',\n          height: '30%'\n        }\n      }, __jsx(Card.Body, null, __jsx(Card.Title, null, \"Eligible Voters\"), __jsx(Card.Subtitle, {\n        className: \"mb-2 text-muted\"\n      }, \"voter quantity : 10\"), __jsx(Form, {\n        inline: true,\n        style: {\n          margin: \"auto\"\n        }\n      }, __jsx(FormControl, {\n        type: \"text\",\n        placeholder: \"Search\",\n        className: \"mr-sm-2\"\n      }), __jsx(Button, {\n        variant: \"outline-info\"\n      }, \"Search\")), __jsx(Table, {\n        responsive: true,\n        style: {\n          'height': '200px',\n          \"width\": \"50%\",\n          'overflowY': 'scroll',\n          'display': 'block'\n        }\n      }, __jsx(\"thead\", null, __jsx(\"tr\", null, __jsx(\"th\", null, \"#\"), __jsx(\"th\", null, \"Voting Address\"), __jsx(\"th\", null, \"Register or not\"))), __jsx(\"tbody\", null, __jsx(Voter_listQQ, {\n        list: this.props.voter_list\n      }))))), __jsx(Card, {\n        style: {\n          width: '46%',\n          margin: '1.5%'\n        }\n      }, __jsx(Card.Body, null, __jsx(Card.Title, null, \"Voting Illustration\"), __jsx(Card.Subtitle, {\n        className: \"mb-2 text-muted\"\n      }, \"Vote address : \", this.props.address), __jsx(Card.Text, null, \"View the latest 2020 presidential polls and head-to-head match-up between Joe Biden and Donald Trump. For more information, view cnn.com/election.\"))), __jsx(Card, {\n        style: {\n          width: '46%',\n          margin: '1.5%'\n        }\n      }, __jsx(Card.Body, null, __jsx(Card.Title, null, \"Voting result\"), __jsx(Card.Subtitle, {\n        className: \"mb-2 text-muted\"\n      }, \"The Vote result is shown below\"), __jsx(Vote_result, {\n        results: this.props.options,\n        stage: this.props.stage\n      }))), __jsx(Card, {\n        style: {\n          width: '46%',\n          margin: '1.5%'\n        }\n      }, __jsx(Card.Body, null, __jsx(Card.Title, null, \"Retally\"), __jsx(Card.Subtitle, {\n        className: \"mb-2 text-muted\"\n      }, \"You can retally the vote for assuring the result\"), __jsx(Retally, {\n        stage: this.props.stage\n      })))));\n    }\n  }], [{\n    key: \"getInitialProps\",\n    value: function () {\n      var _getInitialProps = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(props) {\n        var _props$query, address, mb_addr, Vote_event, stage, option_length, result, voter_list, options, stage_str, index, temp, arr;\n\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _props$query = props.query, address = _props$query.address, mb_addr = _props$query.mb_addr;\n                _context.next = 3;\n                return vote(address);\n\n              case 3:\n                Vote_event = _context.sent;\n                _context.next = 6;\n                return Vote_event.methods.return_stage().call();\n\n              case 6:\n                stage = _context.sent;\n                _context.next = 9;\n                return Vote_event.methods.return_options_length().call();\n\n              case 9:\n                option_length = _context.sent;\n                _context.next = 12;\n                return Vote_event.methods.return_result().call();\n\n              case 12:\n                result = _context.sent;\n                _context.next = 15;\n                return Vote_event.methods.return_msgsender_voter_list().call();\n\n              case 15:\n                voter_list = _context.sent;\n                //console.log(voter_list);\n                //console.log(voter_list);\n                options = [];\n                stage_str = stage == 0 ? \"stage : Setup\" : stage == 1 ? \"stage : Register\" : stage == 2 ? \"stage : Vote\" : stage == 3 ? \"stage : Tally\" : stage == 4 ? \"stage : Finish\" : \"stage : Setup\";\n                index = 0;\n\n              case 19:\n                if (!(index < option_length)) {\n                  _context.next = 31;\n                  break;\n                }\n\n                _context.next = 22;\n                return Vote_event.methods.return_options(index).call();\n\n              case 22:\n                temp = _context.sent;\n                arr = [];\n                arr[0] = (index + 1).toString();\n                arr[1] = temp;\n                arr[2] = result[index];\n                options.push(arr);\n\n              case 28:\n                index++;\n                _context.next = 19;\n                break;\n\n              case 31:\n                return _context.abrupt(\"return\", {\n                  address: address,\n                  mb_addr: mb_addr,\n                  stage: stage,\n                  result: result,\n                  options: options,\n                  stage_str: stage_str,\n                  voter_list: voter_list\n                });\n\n              case 32:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      function getInitialProps(_x) {\n        return _getInitialProps.apply(this, arguments);\n      }\n\n      return getInitialProps;\n    }()\n  }]);\n\n  return Status;\n}(Component);\n\nvar Retally = /*#__PURE__*/function (_Component2) {\n  _inherits(Retally, _Component2);\n\n  var _super2 = _createSuper(Retally);\n\n  function Retally() {\n    _classCallCheck(this, Retally);\n\n    return _super2.apply(this, arguments);\n  }\n\n  _createClass(Retally, [{\n    key: \"render\",\n    //const vote_btn =function (stage ){\n    value: function render() {\n      if (this.props.stage <= 2) return __jsx(React.Fragment, null, __jsx(\"h3\", null, \"Have not reach the stage can Tally\"), __jsx(\"h3\", null, \"Please wait for a while\"));else return __jsx(React.Fragment, null, __jsx(Button, {\n        variant: \"primary\",\n        size: \"lg\",\n        style: {\n          margin: \"auto\"\n        }\n      }, \"Retally button\"), ' ');\n    }\n  }]);\n\n  return Retally;\n}(Component);\n\n;\n\nvar Vote_result = /*#__PURE__*/function (_Component3) {\n  _inherits(Vote_result, _Component3);\n\n  var _super3 = _createSuper(Vote_result);\n\n  function Vote_result() {\n    _classCallCheck(this, Vote_result);\n\n    return _super3.apply(this, arguments);\n  }\n\n  _createClass(Vote_result, [{\n    key: \"render\",\n    //const vote_btn =function (stage ){\n    value: function render() {\n      //console.log(this.props.results);\n      if (this.props.stage <= 3) return __jsx(React.Fragment, null, __jsx(\"h3\", null, \"Have not reach the stage can Tally\"), __jsx(\"h3\", null, \"Please wait for a while\"));else return __jsx(React.Fragment, null, __jsx(Card.Subtitle, {\n        className: \"mb-2 text-muted\"\n      }, \"Elected Candidate : Korean Fish\"), __jsx(Card.Subtitle, {\n        className: \"mb-2 text-muted\"\n      }, \"Election Phase : \", this.props.stage_str), __jsx(Table, {\n        responsive: true\n      }, __jsx(\"thead\", null, __jsx(\"tr\", null, __jsx(\"th\", null, \"#\"), __jsx(\"th\", null, \"Option's Name\"), __jsx(\"th\", null, \"Totol votes to the option\"))), __jsx(\"tbody\", null, this.props.results.map(function (result) {\n        return __jsx(\"tr\", null, __jsx(Vote_result_Unit, {\n          details: result\n        }));\n      }))));\n    }\n  }]);\n\n  return Vote_result;\n}(Component);\n\n;\n\nvar Vote_result_Unit = /*#__PURE__*/function (_Component4) {\n  _inherits(Vote_result_Unit, _Component4);\n\n  var _super4 = _createSuper(Vote_result_Unit);\n\n  function Vote_result_Unit() {\n    _classCallCheck(this, Vote_result_Unit);\n\n    return _super4.apply(this, arguments);\n  }\n\n  _createClass(Vote_result_Unit, [{\n    key: \"render\",\n    value: function render() {\n      return __jsx(React.Fragment, null, this.props.details.map(function (detail) {\n        return __jsx(\"td\", null, detail);\n      }));\n    }\n  }]);\n\n  return Vote_result_Unit;\n}(Component);\n\nvar Voter_listQQ = /*#__PURE__*/function (_Component5) {\n  _inherits(Voter_listQQ, _Component5);\n\n  var _super5 = _createSuper(Voter_listQQ);\n\n  function Voter_listQQ() {\n    _classCallCheck(this, Voter_listQQ);\n\n    return _super5.apply(this, arguments);\n  }\n\n  _createClass(Voter_listQQ, [{\n    key: \"render\",\n    value: function render() {\n      //console.log(this.props.list);\n      return __jsx(React.Fragment, null, this.props.list.map(function (items) {\n        return __jsx(\"tr\", null, __jsx(\"td\", null, items[0] + 1), __jsx(\"td\", null, items[1]), __jsx(\"td\", null, \"Yes\"));\n      }));\n    }\n  }]);\n\n  return Voter_listQQ;\n}(Component);\n\nexport default Status;\n/**暫時性垃圾\r\n * <Table responsive style={{'height': '200px',\"width\":\"50%\", 'overflowY':'scroll', 'display': 'block'}}>\r\n                    <thead>\r\n                        <tr>\r\n                        <th>#</th>\r\n                        <th>items</th>\r\n                        <th>link</th>\r\n                        </tr>\r\n                    </thead>\r\n                    \r\n                    <tbody>\r\n                        <tr>\r\n                        <td>1</td>\r\n                        <td>register or not</td>\r\n                        <td>True</td>\r\n                        </tr>\r\n                        <tr>\r\n                        <td>2</td>\r\n                        <td>Status</td>\r\n                        <td>Vote</td>\r\n                        </tr>\r\n                        <tr>\r\n                        <td>3</td>\r\n                        <td>Candidate 1</td>\r\n                        <td><Card.Link href=\"#\">policy</Card.Link></td>\r\n                        </tr>\r\n                        <tr>\r\n                        <td>3</td>\r\n                        <td>Table cell</td>\r\n                        <td>Table cell</td>\r\n                        </tr>\r\n                        <tr>\r\n                        <td>3</td>\r\n                        <td>Table cell</td>\r\n                        <td>Table cell</td>\r\n                        </tr>\r\n                        <tr>\r\n                        <td>3</td>\r\n                        <td>Table cell</td>\r\n                        <td>Table cell</td>\r\n                        </tr>\r\n                        <tr>\r\n                        <td>3</td>\r\n                        <td>Table cell</td>\r\n                        <td>Table cell</td>\r\n                        </tr>\r\n                    </tbody>\r\n                </Table>\r\n */","map":{"version":3,"sources":["C:/Users/suvin/vincent/Dapp/nextjs-web/pages/Vote/status.js"],"names":["React","Component","Link","Navbar","Nav","Container","Form","FormControl","Button","Card","Table","ReactShadowScroll","web3","Router","vote","Status","props","state","search","loading","loading2","errorMessage","refresh_search","bind","pushRoute","width","console","log","options","mb_addr","color","address","margin","event","setState","target","value","height","voter_list","stage","query","Vote_event","methods","return_stage","call","return_options_length","option_length","return_result","result","return_msgsender_voter_list","stage_str","index","return_options","temp","arr","toString","push","Retally","Vote_result","results","map","Vote_result_Unit","details","detail","Voter_listQQ","list","items"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport{Link}from '../../routes';\r\n\r\nimport Navbar from 'react-bootstrap/Navbar';\r\nimport Nav from 'react-bootstrap/Nav';\r\nimport Container from 'react-bootstrap/Nav';\r\nimport Form from 'react-bootstrap/Form';\r\nimport FormControl from 'react-bootstrap/FormControl';\r\nimport Button from 'react-bootstrap/Button';\r\nimport {Card,Table} from 'react-bootstrap';\r\nimport ReactShadowScroll from 'react-shadow-scroll';\r\nimport web3 from '../../ethereum/web3'\r\nimport {Router}from '../../routes';\r\nimport vote from '../../ethereum/Vote/vote';\r\n\r\nclass Status extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state ={\r\n         // Mb_addr :props.query.address,\r\n          search : \"\",\r\n          loading : false,\r\n          loading2: false,\r\n          errorMessage:''\r\n        };\r\n        this.refresh_search = this.refresh_search.bind(this);\r\n    }\r\n    static async getInitialProps(props){\r\n        const{address,mb_addr} = props.query;\r\n        const Vote_event =await vote(address);\r\n        const stage = await Vote_event.methods.return_stage().call();\r\n        const option_length = await Vote_event.methods.return_options_length().call();\r\n        const result = await Vote_event.methods.return_result().call();\r\n        //console.log(Vote_event);\r\n        let voter_list = await Vote_event.methods.return_msgsender_voter_list().call();\r\n        //console.log(voter_list);\r\n        \r\n        //console.log(voter_list);\r\n        var options = [];\r\n\r\n        const stage_str =  (stage == 0)?\"stage : Setup\":\r\n                           (stage == 1)?\"stage : Register\":\r\n                           (stage == 2)?\"stage : Vote\":\r\n                           (stage == 3)?\"stage : Tally\":\r\n                           (stage == 4)?\"stage : Finish\":\"stage : Setup\";\r\n\r\n        for (let index = 0; index < option_length; index++) {\r\n            let temp = await Vote_event.methods.return_options(index).call();\r\n            let arr = [];\r\n            arr[0] = (index+1).toString();\r\n            arr[1] = temp;\r\n            arr[2] = result[index];\r\n            options.push(arr);\r\n        }\r\n\r\n        return{address,mb_addr,stage,result,options,stage_str,voter_list};\r\n    }\r\n    refresh_search(){\r\n        if(this.state.search != \"\")\r\n         Router.pushRoute(`/Vote/status/${this.state.search}`);\r\n         //console.log(this.props.address);\r\n     }\r\n    render() {\r\n        return(\r\n        <>\r\n         <link rel=\"stylesheet\" href=\"https://maxcdn.bootstrapcdn.com/bootstrap/4.5.0/css/bootstrap.min.css\" integrity=\"sha384-9aIt2nRpC12Uk9gS9baDl411NQApFmC26EwAOH8WgZl5MYYxFfc+NcPb1dKGj7Sk\" crossorigin=\"anonymous\"/>\r\n         <Container>\r\n         <Navbar bg=\"dark\" variant=\"dark\"style={{width:\"100%\"}}>\r\n         <Navbar.Brand >Vote</Navbar.Brand>\r\n         {console.log(this.props.options)}\r\n         <Nav className=\"mr-auto\">\r\n                <Link route={\"/Vote/home/\"+ this.props.mb_addr }  ><a style={{color: \"white\", width:\"100px\"}}>Home</a></Link>\r\n                <Link route={\"/Vote/status/\"+this.props.mb_addr+\"/\"+this.props.address} ><a style={{color: \"white\", width:\"100px\"}}>Vote</a></Link>\r\n                <Link route={\"/Vote/index\" }  ><a style={{color: \"white\", width:\"100px\"}}>Logout</a></Link>\r\n             </Nav>\r\n            <Form inline style={{margin :\"auto\"}}>\r\n            <div style={{color : \"white\"}} > inesrt your vote contract address here  -&gt;   </div>\r\n            <FormControl type=\"text\" placeholder=\"Search\" className=\"mr-sm-2\" \r\n             value={this.state.search} \r\n             onChange = {event => this.setState({search:event.target.value})}/>\r\n            <Button variant=\"outline-info\" onClick={this.refresh_search}>Search</Button>\r\n            </Form>\r\n        </Navbar>\r\n            \r\n        <Card style={{ width: '46%' , margin: '1.5%' ,height: '30%' }}>\r\n            <Card.Body>\r\n                <Card.Title>Eligible Voters</Card.Title>\r\n                <Card.Subtitle className=\"mb-2 text-muted\">voter quantity : 10</Card.Subtitle>\r\n                \r\n                <Form inline style={{margin :\"auto\"}}>\r\n                        <FormControl type=\"text\" placeholder=\"Search\" className=\"mr-sm-2\" />\r\n                        <Button variant=\"outline-info\">Search</Button>\r\n                    </Form>\r\n                <Table responsive style={{'height': '200px',\"width\":\"50%\", 'overflowY':'scroll', 'display': 'block'}}>\r\n                    <thead>\r\n                        <tr>\r\n                        <th>#</th>\r\n                        <th>Voting Address</th>\r\n                        <th>Register or not</th>\r\n                        </tr>\r\n                    </thead>\r\n                    \r\n                    <tbody>\r\n                        <Voter_listQQ list ={this.props.voter_list}></Voter_listQQ>\r\n                        {/*<tr>\r\n                        <td>1</td>\r\n                        <td>Table cell</td>\r\n                        <td>Table cell</td>\r\n                        </tr>\r\n                        <tr>\r\n                        <td>2</td>\r\n                        <td>Table cell</td>\r\n                        <td>Table cell</td>\r\n                        </tr>\r\n                        <tr>\r\n                        <td>3</td>\r\n                        <td>Table cell</td>\r\n                        <td>Table cell</td>\r\n                        </tr>\r\n                        <tr>\r\n                        <td>3</td>\r\n                        <td>Table cell</td>\r\n                        <td>Table cell</td>\r\n                        </tr>\r\n                        <tr>\r\n                        <td>3</td>\r\n                        <td>Table cell</td>\r\n                        <td>Table cell</td>\r\n                        </tr>\r\n                        <tr>\r\n                        <td>3</td>\r\n                        <td>Table cell</td>\r\n                        <td>Table cell</td>\r\n                        </tr>\r\n                        <tr>\r\n                        <td>3</td>\r\n                        <td>Table cell</td>\r\n                        <td>Table cell</td>\r\n                        </tr>*/}\r\n                    </tbody>\r\n                </Table>\r\n                \r\n            </Card.Body>\r\n        </Card>\r\n        <Card style={{ width: '46%' , margin: '1.5%'}}>\r\n            <Card.Body>\r\n                <Card.Title>Voting Illustration</Card.Title>\r\n                <Card.Subtitle className=\"mb-2 text-muted\">Vote address : {this.props.address}</Card.Subtitle>\r\n                <Card.Text>\r\n                    View the latest 2020 presidential polls and head-to-head match-up between Joe Biden and Donald Trump. For more information, view cnn.com/election.\r\n                </Card.Text>\r\n                \r\n                \r\n            </Card.Body>\r\n        </Card>\r\n        <Card style={{ width: '46%' , margin: '1.5%'}}>\r\n            <Card.Body>\r\n                <Card.Title>Voting result</Card.Title>\r\n                <Card.Subtitle className=\"mb-2 text-muted\">The Vote result is shown below</Card.Subtitle>\r\n                        <Vote_result results = {this.props.options} stage ={this.props.stage}></Vote_result>\r\n                        \r\n            </Card.Body>\r\n        </Card>\r\n        <Card style={{ width: '46%' , margin: '1.5%'}}>\r\n            <Card.Body>\r\n                <Card.Title>Retally</Card.Title>\r\n                <Card.Subtitle className=\"mb-2 text-muted\">You can retally the vote for assuring the result</Card.Subtitle>\r\n                <Retally stage = {this.props.stage}></Retally>\r\n                {/*<Button variant=\"primary\" size=\"lg\" style={{ margin:\"auto\"}}>\r\n                     Retally button\r\n                </Button>*/}\r\n            </Card.Body>\r\n        </Card>\r\n      </Container>\r\n        </>\r\n    )\r\n    }\r\n}\r\n\r\nclass Retally extends Component{\r\n    //const vote_btn =function (stage ){\r\n        render(){\r\n        if(this.props.stage <=2 ) \r\n            return (\r\n                <>\r\n                <h3>Have not reach the stage can Tally</h3>\r\n                <h3>Please wait for a while</h3>\r\n                </>\r\n            );\r\n        else \r\n            return (\r\n                <>\r\n                <Button variant=\"primary\" size=\"lg\" style={{ margin:\"auto\"}}>\r\n                     Retally button\r\n                </Button>{' '}\r\n                </>\r\n            );\r\n        }\r\n  };\r\n\r\nclass Vote_result extends Component{\r\n    //const vote_btn =function (stage ){\r\n        render(){\r\n        //console.log(this.props.results);\r\n        if(this.props.stage <=3 ) \r\n            return (\r\n                <>\r\n                <h3>Have not reach the stage can Tally</h3>\r\n                <h3>Please wait for a while</h3>\r\n                </>\r\n            );\r\n        else \r\n            return (\r\n                <>\r\n                <Card.Subtitle className=\"mb-2 text-muted\">Elected Candidate : Korean Fish</Card.Subtitle>\r\n                <Card.Subtitle className=\"mb-2 text-muted\">Election Phase : {this.props.stage_str}</Card.Subtitle>\r\n                <Table responsive>\r\n                    <thead>\r\n                        <tr>\r\n                        <th>#</th>\r\n                        <th>Option's Name</th>\r\n                        <th>Totol votes to the option</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {this.props.results.map(result => <tr><Vote_result_Unit details={result}></Vote_result_Unit></tr>)}\r\n                    </tbody>\r\n                </Table>\r\n                </>\r\n            );\r\n        }\r\n  };\r\nclass Vote_result_Unit extends Component{\r\n    render(){\r\n        return(\r\n            <>\r\n            {this.props.details.map(detail => <td>{detail}</td>)}\r\n            </>\r\n        )\r\n    }\r\n}\r\nclass Voter_listQQ extends Component{\r\n    render(){\r\n        //console.log(this.props.list);\r\n        return(\r\n            <>\r\n            {this.props.list.map(items=>\r\n                <tr>\r\n                <td>{items[0]+1}</td>\r\n                <td>{items[1]}</td>\r\n                <td>Yes</td>\r\n                </tr>\r\n            )}\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Status;\r\n\r\n\r\n/**暫時性垃圾\r\n * <Table responsive style={{'height': '200px',\"width\":\"50%\", 'overflowY':'scroll', 'display': 'block'}}>\r\n                    <thead>\r\n                        <tr>\r\n                        <th>#</th>\r\n                        <th>items</th>\r\n                        <th>link</th>\r\n                        </tr>\r\n                    </thead>\r\n                    \r\n                    <tbody>\r\n                        <tr>\r\n                        <td>1</td>\r\n                        <td>register or not</td>\r\n                        <td>True</td>\r\n                        </tr>\r\n                        <tr>\r\n                        <td>2</td>\r\n                        <td>Status</td>\r\n                        <td>Vote</td>\r\n                        </tr>\r\n                        <tr>\r\n                        <td>3</td>\r\n                        <td>Candidate 1</td>\r\n                        <td><Card.Link href=\"#\">policy</Card.Link></td>\r\n                        </tr>\r\n                        <tr>\r\n                        <td>3</td>\r\n                        <td>Table cell</td>\r\n                        <td>Table cell</td>\r\n                        </tr>\r\n                        <tr>\r\n                        <td>3</td>\r\n                        <td>Table cell</td>\r\n                        <td>Table cell</td>\r\n                        </tr>\r\n                        <tr>\r\n                        <td>3</td>\r\n                        <td>Table cell</td>\r\n                        <td>Table cell</td>\r\n                        </tr>\r\n                        <tr>\r\n                        <td>3</td>\r\n                        <td>Table cell</td>\r\n                        <td>Table cell</td>\r\n                        </tr>\r\n                    </tbody>\r\n                </Table>\r\n */"]},"metadata":{},"sourceType":"module"}