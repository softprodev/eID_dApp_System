{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport Web3 from 'web3';\nvar web3;\n\nif (true && typeof window.web3 !== 'undefined') {\n  // we are in the brower and metamask is running\n  web3 = new Web3(window.web3.currentProvider);\n  window.addEventListener(\"load\", /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            if (!window.ethereum) {\n              _context.next = 11;\n              break;\n            }\n\n            window.web3 = new Web3(window.ethereum);\n            _context.prev = 2;\n            _context.next = 5;\n            return window.ethereum.enable();\n\n          case 5:\n            _context.next = 9;\n            break;\n\n          case 7:\n            _context.prev = 7;\n            _context.t0 = _context[\"catch\"](2);\n\n          case 9:\n            _context.next = 12;\n            break;\n\n          case 11:\n            // Legacy dapp browsers...\n            if (window.web3) {\n              window.web3 = new Web3(web3.currentProvider);\n            } // Non-dapp browsers...\n            else {\n                console.log(\"Non-Ethereum browser detected. You should consider trying MetaMask!\");\n              }\n\n          case 12:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee, null, [[2, 7]]);\n  })));\n} else {\n  // we are on the server or the user is not runnning metamask\n  var provider = new Web3.providers.HttpProvider('https://rinkeby.infura.io/v3/1c223290588542dba4cb02720d1a5826');\n  web3 = new Web3(provider);\n}\n\nexport default web3;","map":{"version":3,"sources":["C:/Users/suvin/vincent/Dapp/nextjs-web/ethereum/academic/web3.js"],"names":["Web3","web3","window","currentProvider","addEventListener","ethereum","enable","console","log","provider","providers","HttpProvider"],"mappings":";;AAAA,OAAOA,IAAP,MAAiB,MAAjB;AAEA,IAAIC,IAAJ;;AAEA,IAAI,QAAiC,OAAOC,MAAM,CAACD,IAAd,KAAuB,WAA5D,EAAyE;AACrE;AACAA,EAAAA,IAAI,GAAG,IAAID,IAAJ,CAASE,MAAM,CAACD,IAAP,CAAYE,eAArB,CAAP;AACAD,EAAAA,MAAM,CAACE,gBAAP,CAAwB,MAAxB,wEAAgC;AAAA;AAAA;AAAA;AAAA;AAAA,iBAExBF,MAAM,CAACG,QAFiB;AAAA;AAAA;AAAA;;AAG1BH,YAAAA,MAAM,CAACD,IAAP,GAAc,IAAID,IAAJ,CAASE,MAAM,CAACG,QAAhB,CAAd;AAH0B;AAAA;AAAA,mBAMlBH,MAAM,CAACG,QAAP,CAAgBC,MAAhB,EANkB;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAW5B;AACK,gBAAIJ,MAAM,CAACD,IAAX,EAAiB;AACpBC,cAAAA,MAAM,CAACD,IAAP,GAAc,IAAID,IAAJ,CAASC,IAAI,CAACE,eAAd,CAAd;AACD,aAFI,CAGL;AAHK,iBAIA;AACHI,gBAAAA,OAAO,CAACC,GAAR,CAAY,qEAAZ;AACD;;AAlB2B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAhC;AAoBH,CAvBD,MAuBO;AACH;AACA,MAAMC,QAAQ,GAAG,IAAIT,IAAI,CAACU,SAAL,CAAeC,YAAnB,CACb,+DADa,CAAjB;AAGAV,EAAAA,IAAI,GAAG,IAAID,IAAJ,CAASS,QAAT,CAAP;AACH;;AAED,eAAeR,IAAf","sourcesContent":["import Web3 from 'web3';\r\n\r\nlet web3;\r\n\r\nif (typeof window !== 'undefined' && typeof window.web3 !== 'undefined') {\r\n    // we are in the brower and metamask is running\r\n    web3 = new Web3(window.web3.currentProvider);\r\n    window.addEventListener(\"load\", async () => {\r\n        // Modern dapp browsers...\r\n        if (window.ethereum) {\r\n          window.web3 = new Web3(window.ethereum);\r\n          try {\r\n            // Request account access if needed\r\n            await window.ethereum.enable();\r\n          } catch (error) {\r\n            // User denied account access...\r\n          }\r\n        }\r\n        // Legacy dapp browsers...\r\n        else if (window.web3) {\r\n          window.web3 = new Web3(web3.currentProvider);\r\n        }\r\n        // Non-dapp browsers...\r\n        else {\r\n          console.log(\"Non-Ethereum browser detected. You should consider trying MetaMask!\");\r\n        }\r\n    });\r\n} else {\r\n    // we are on the server or the user is not runnning metamask\r\n    const provider = new Web3.providers.HttpProvider(\r\n        'https://rinkeby.infura.io/v3/1c223290588542dba4cb02720d1a5826'\r\n    );\r\n    web3 = new Web3(provider);\r\n}\r\n\r\nexport default web3;"]},"metadata":{},"sourceType":"module"}