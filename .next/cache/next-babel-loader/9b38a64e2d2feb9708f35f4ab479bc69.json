{"ast":null,"code":"var __jsx = React.createElement;\nimport React, { Component } from 'react';\nimport { Table, Button } from 'semantic-ui-react';\nimport Layout from '../../../components/Layout';\nimport { Link } from '../../../routes';\nimport CourseRow from '../../../components/CourseRow';\nimport certData from '../../../certificate.json';\n\nclass Transcript extends Component {\n  static async getInitialProps() {\n    const transcriptCount = certData.transcript.length; //console.log(transcriptCount);\n\n    const transcripts = await Promise.all(Array(transcriptCount).fill().map((element, index) => {\n      return certData.transcript[index];\n    })); //console.log(transcripts);\n\n    return {\n      transcripts\n    };\n  }\n\n  renderRows() {\n    return this.props.transcripts.map((transcript, index) => {\n      return __jsx(CourseRow, {\n        key: index,\n        transcript: transcript\n      });\n    });\n  }\n\n  render() {\n    const {\n      Header,\n      Row,\n      HeaderCell,\n      Body\n    } = Table;\n    return __jsx(Layout, null, __jsx(\"h1\", null, \"Transcript\"), __jsx(Link, {\n      route: \"/Academic/certificates/success\"\n    }, __jsx(\"a\", null, \"back\")), __jsx(Table, null, __jsx(Header, null, __jsx(Row, null, __jsx(HeaderCell, null, \"CourseID\"), __jsx(HeaderCell, null, \"Name\"), __jsx(HeaderCell, null, \"Grade\"), __jsx(HeaderCell, null, \"Credit\"), __jsx(HeaderCell, null, \"Semester\"), __jsx(HeaderCell, null, \"End date\"))), __jsx(Body, null, this.renderRows())));\n  }\n\n}\n\nexport default Transcript;","map":{"version":3,"sources":["C:/Users/suvin/vincent/Dapp/nextjs-web/pages/Academic/certificates/transcript.js"],"names":["React","Component","Table","Button","Layout","Link","CourseRow","certData","Transcript","getInitialProps","transcriptCount","transcript","length","transcripts","Promise","all","Array","fill","map","element","index","renderRows","props","render","Header","Row","HeaderCell","Body"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,KAAT,EAAgBC,MAAhB,QAA8B,mBAA9B;AACA,OAAOC,MAAP,MAAmB,4BAAnB;AACA,SAASC,IAAT,QAAqB,iBAArB;AACA,OAAOC,SAAP,MAAsB,+BAAtB;AACA,OAAOC,QAAP,MAAqB,2BAArB;;AAEA,MAAMC,UAAN,SAAyBP,SAAzB,CAAmC;AACjC,eAAaQ,eAAb,GAA+B;AAC7B,UAAMC,eAAe,GAAGH,QAAQ,CAACI,UAAT,CAAoBC,MAA5C,CAD6B,CAE7B;;AAEA,UAAMC,WAAW,GAAG,MAAMC,OAAO,CAACC,GAAR,CACxBC,KAAK,CAACN,eAAD,CAAL,CAAuBO,IAAvB,GAA8BC,GAA9B,CAAkC,CAACC,OAAD,EAAUC,KAAV,KAAoB;AACpD,aAAOb,QAAQ,CAACI,UAAT,CAAoBS,KAApB,CAAP;AACD,KAFD,CADwB,CAA1B,CAJ6B,CAU7B;;AAEA,WAAO;AAAEP,MAAAA;AAAF,KAAP;AACD;;AAEAQ,EAAAA,UAAU,GAAG;AACX,WAAO,KAAKC,KAAL,CAAWT,WAAX,CAAuBK,GAAvB,CAA2B,CAACP,UAAD,EAAaS,KAAb,KAAuB;AACvD,aACC,MAAC,SAAD;AACE,QAAA,GAAG,EAAEA,KADP;AAEE,QAAA,UAAU,EAAET;AAFd,QADD;AAMD,KAPM,CAAP;AAQD;;AAEFY,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEC,MAAAA,MAAF;AAAUC,MAAAA,GAAV;AAAeC,MAAAA,UAAf;AAA2BC,MAAAA;AAA3B,QAAoCzB,KAA1C;AAEA,WACE,MAAC,MAAD,QACE,+BADF,EAEE,MAAC,IAAD;AAAM,MAAA,KAAK,EAAE;AAAb,OACE,wBADF,CAFF,EAKE,MAAC,KAAD,QACE,MAAC,MAAD,QACE,MAAC,GAAD,QACE,MAAC,UAAD,mBADF,EAEE,MAAC,UAAD,eAFF,EAGE,MAAC,UAAD,gBAHF,EAIE,MAAC,UAAD,iBAJF,EAKE,MAAC,UAAD,mBALF,EAME,MAAC,UAAD,mBANF,CADF,CADF,EAWE,MAAC,IAAD,QACG,KAAKmB,UAAL,EADH,CAXF,CALF,CADF;AAuBD;;AArDgC;;AAwDnC,eAAeb,UAAf","sourcesContent":["import React, { Component } from 'react';\r\nimport { Table, Button } from 'semantic-ui-react';\r\nimport Layout from '../../../components/Layout';\r\nimport { Link } from '../../../routes';\r\nimport CourseRow from '../../../components/CourseRow';\r\nimport certData from '../../../certificate.json';\r\n\r\nclass Transcript extends Component {\r\n  static async getInitialProps() {\r\n    const transcriptCount = certData.transcript.length;\r\n    //console.log(transcriptCount);\r\n    \r\n    const transcripts = await Promise.all(\r\n      Array(transcriptCount).fill().map((element, index) => {\r\n        return certData.transcript[index];\r\n      })\r\n    );\r\n\r\n    //console.log(transcripts);\r\n\r\n    return { transcripts };\r\n  }\r\n\r\n   renderRows() {\r\n     return this.props.transcripts.map((transcript, index) => {\r\n       return (\r\n        <CourseRow\r\n          key={index}\r\n          transcript={transcript}\r\n        />\r\n       );\r\n     });\r\n   }\r\n\r\n  render() {\r\n    const { Header, Row, HeaderCell, Body } = Table;\r\n\r\n    return (\r\n      <Layout>\r\n        <h1>Transcript</h1>\r\n        <Link route={\"/Academic/certificates/success\"}>\r\n          <a>back</a>\r\n        </Link>\r\n        <Table>\r\n          <Header>\r\n            <Row>\r\n              <HeaderCell>CourseID</HeaderCell>\r\n              <HeaderCell>Name</HeaderCell>\r\n              <HeaderCell>Grade</HeaderCell>\r\n              <HeaderCell>Credit</HeaderCell>\r\n              <HeaderCell>Semester</HeaderCell>\r\n              <HeaderCell>End date</HeaderCell>\r\n            </Row>\r\n          </Header>\r\n          <Body>\r\n            {this.renderRows()}\r\n          </Body>\r\n        </Table>\r\n      </Layout>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Transcript;"]},"metadata":{},"sourceType":"module"}