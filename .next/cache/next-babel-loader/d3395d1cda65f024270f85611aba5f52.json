{"ast":null,"code":"var __jsx = React.createElement;\nimport React, { Component } from 'react';\nimport { Link } from '../../routes';\nimport Navbar from 'react-bootstrap/Navbar';\nimport Nav from 'react-bootstrap/Nav';\nimport Container from 'react-bootstrap/Nav';\nimport Form from 'react-bootstrap/Form';\nimport FormControl from 'react-bootstrap/FormControl';\nimport Button from 'react-bootstrap/Button';\nimport { Card } from 'react-bootstrap';\nimport web3 from '../../ethereum/web3';\nimport { Router } from '../../routes';\nimport vote from '../../ethereum/Vote/vote';\nimport registry from '../../ethereum/Vote/registry';\n\nconst show_btn = function (stage) {\n  if (stage != 0) return null; //console.log(stage);\n\n  return __jsx(\"div\", null, \"this vote still needs setting please wait\");\n};\n\nclass Register_btn extends Component {\n  //const register_btn =function ( stage ){\n  constructor(props) {\n    super(props);\n    this.state = {\n      registry_addr: \"\"\n    };\n    this.register = this.register.bind(this);\n  }\n\n  async register() {\n    //0x42309f924237Bac662Af64965A2efAF8c08fE4d2\n    const accounts = await web3.eth.getAccounts();\n    const Vote_event = await vote(this.props.address);\n    let requirements = await Vote_event.methods.requirement();\n    console.log(requirements);\n    var hash = CryptoJS.SHA3(\"human\", {\n      outputLength: 256\n    }).toString(); //console.log(web3.utils.fromAscii(hash));\n\n    try {\n      //await Vote_event.methods.register('0x'+hash,this.state.registry_addr).send({from:accounts[0]});\n      await Vote_event.methods.register(requirement, this.state.registry_addr).send({\n        from: accounts[0]\n      });\n      Router.pushRoute(`/Vote/vote/${this.props.mb_addr}/${this.props.address}`);\n    } catch (err) {\n      alert(err.message);\n    }\n  }\n\n  render() {\n    //console.log(this.props.stage );\n    if (this.props.stage != 1) return null;\n    return __jsx(React.Fragment, null, __jsx(FormControl, {\n      type: \"text\",\n      placeholder: \"enter your registry number\",\n      className: \"mr-sm-2\",\n      value: this.state.registry_addr,\n      onChange: event => this.setState({\n        registry_addr: event.target.value\n      })\n    }), __jsx(Button, {\n      variant: \"outline-info\",\n      style: {\n        margin: \"2%\"\n      },\n      onClick: this.register\n    }, \"register\"));\n  }\n\n}\n\n;\n\nclass Vote_btn extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      vote_value: 0\n    };\n    this.go_vote = this.go_vote.bind(this);\n  }\n\n  async go_vote() {\n    console.log(this.state.vote_value);\n    const accounts = await web3.eth.getAccounts();\n    const Vote_event = await vote(this.props.address);\n\n    try {\n      await Vote_event.methods.can_vote(this.state.vote_value).send({\n        from: accounts[0]\n      });\n      Router.pushRoute(`/Vote/vote/${this.props.mb_addr}/${this.props.address}`);\n    } catch (err) {\n      alert(err.message);\n    }\n  }\n\n  render() {\n    if (this.props.stage != 2) return null;\n    return __jsx(React.Fragment, null, __jsx(Form, {\n      style: {\n        width: '33%',\n        margin: 'auto',\n        marginTop: \"2%\"\n      }\n    }, __jsx(Form.Group, null, __jsx(Form.Control, {\n      as: \"select\",\n      size: \"lg\",\n      onChange: event => this.setState({\n        vote_value: event.target.value\n      })\n    }, this.props.ops.map((op, index) => __jsx(\"option\", {\n      value: index\n    }, op)))), __jsx(Button, {\n      variant: \"outline-info\",\n      style: {\n        margin: \"2%\"\n      },\n      onClick: this.go_vote\n    }, \"Vote\")));\n  }\n\n}\n\n;\n\nclass Votesss extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      search: \"\",\n      loading: false,\n      loading2: false,\n      stage: '',\n      search: '',\n      errorMessage: '',\n      html_test: null,\n      mailbox_addr: ''\n    }; //console.log(props.query.address);//擷取這個網址的url那part的address(from routes??)  \n\n    this.refresh_search = this.refresh_search.bind(this);\n  }\n\n  static async getInitialProps(props) {\n    const {\n      address,\n      mb_addr\n    } = props.query;\n    const Vote_event = await vote(address);\n    const stage = await Vote_event.methods.return_stage().call();\n    const option_length = await Vote_event.methods.return_options_length().call();\n    const stage_str = stage == 0 ? \"stage : Setup\" : stage == 1 ? \"stage : Register\" : stage == 2 ? \"stage : Vote\" : stage == 3 ? \"stage : Tally\" : stage == 4 ? \"stage : Finish\" : \"stage : Setup\";\n    var options = [];\n\n    for (let index = 0; index < option_length; index++) {\n      let temp = await Vote_event.methods.return_options(index).call();\n      options.push(temp);\n    }\n\n    return {\n      address,\n      Vote_event,\n      stage,\n      option_length,\n      stage_str,\n      options,\n      mb_addr\n    };\n  }\n\n  refresh_search() {\n    if (this.state.search != \"\") Router.pushRoute(`/Vote/vote/${this.state.search}`); //console.log(this.props.address);\n  }\n\n  render() {\n    return __jsx(React.Fragment, null, __jsx(\"link\", {\n      rel: \"stylesheet\",\n      href: \"https://maxcdn.bootstrapcdn.com/bootstrap/4.5.0/css/bootstrap.min.css\",\n      integrity: \"sha384-9aIt2nRpC12Uk9gS9baDl411NQApFmC26EwAOH8WgZl5MYYxFfc+NcPb1dKGj7Sk\",\n      crossOrigin: \"anonymous\"\n    }), __jsx(\"script\", {\n      src: \"https://cdnjs.cloudflare.com/ajax/libs/crypto-js/3.1.9-1/crypto-js.js\"\n    }), __jsx(Container, null, __jsx(Navbar, {\n      bg: \"dark\",\n      variant: \"dark\",\n      style: {\n        width: \"100%\"\n      }\n    }, __jsx(Navbar.Brand, null, \"Vote\"), __jsx(Nav, {\n      className: \"mr-auto\",\n      style: {\n        width: \"50%\"\n      }\n    }, __jsx(Link, {\n      route: \"/Vote/home/\" + this.props.mb_addr\n    }, __jsx(\"a\", {\n      style: {\n        color: \"white\",\n        width: \"100px\"\n      }\n    }, \"Home\")), __jsx(Link, {\n      route: \"/Vote/status/\" + this.props.mb_addr + \"/\" + this.props.address\n    }, __jsx(\"a\", {\n      style: {\n        color: \"white\",\n        width: \"100px\"\n      }\n    }, \"Status\")), __jsx(Link, {\n      route: \"/Vote/index\"\n    }, __jsx(\"a\", {\n      style: {\n        color: \"white\",\n        width: \"100px\"\n      }\n    }, \"Logout\")))), __jsx(\"div\", {\n      style: {\n        width: '100%'\n      }\n    }, __jsx(Form, {\n      inline: true,\n      style: {\n        width: '33%',\n        margin: 'auto',\n        marginTop: \"2%\"\n      }\n    }, __jsx(\"div\", {\n      style: {\n        color: \"black\"\n      }\n    }, \" inesrt your vote contract address here  ->   \"), __jsx(FormControl, {\n      type: \"text\",\n      placeholder: \"Search\",\n      className: \"mr-sm-2\",\n      value: this.state.search,\n      onChange: event => this.setState({\n        search: event.target.value\n      })\n    }), __jsx(Button, {\n      variant: \"outline-info\",\n      onClick: this.refresh_search\n    }, \"Search\")), __jsx(Card, {\n      style: {\n        width: '33%',\n        margin: 'auto',\n        marginTop: \"2%\"\n      }\n    }, __jsx(Card.Body, null, __jsx(Card.Title, null, \"Election\"), __jsx(Card.Subtitle, {\n      className: \"mb-2 text-muted\"\n    }, \"voter address : \", this.props.address), __jsx(Card.Text, null, \"View the latest 2020 presidential polls and head-to-head match-up between Joe Biden and Donald Trump. For more information, view cnn.com/election.\"), __jsx(Card.Text, null, this.props.stage_str), show_btn(this.props.stage), __jsx(Register_btn, {\n      stage: this.props.stage,\n      address: this.props.address,\n      mb_addr: this.props.mb_addr\n    }), __jsx(Vote_btn, {\n      stage: this.props.stage,\n      ops: this.props.options,\n      address: this.props.address,\n      mb_addr: this.props.mb_addr\n    })))), __jsx(\"div\", {\n      style: {\n        width: '100%'\n      }\n    })));\n  }\n\n}\n\nexport default Votesss;","map":{"version":3,"sources":["C:/Users/suvin/vincent/Dapp/nextjs-web/pages/Vote/vote.js"],"names":["React","Component","Link","Navbar","Nav","Container","Form","FormControl","Button","Card","web3","Router","vote","registry","show_btn","stage","Register_btn","constructor","props","state","registry_addr","register","bind","accounts","eth","getAccounts","Vote_event","address","requirements","methods","requirement","console","log","hash","CryptoJS","SHA3","outputLength","toString","send","from","pushRoute","mb_addr","err","alert","message","render","event","setState","target","value","margin","Vote_btn","vote_value","go_vote","can_vote","width","marginTop","ops","map","op","index","Votesss","search","loading","loading2","errorMessage","html_test","mailbox_addr","refresh_search","getInitialProps","query","return_stage","call","option_length","return_options_length","stage_str","options","temp","return_options","push","color"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport{Link}from '../../routes';\r\n\r\nimport Navbar from 'react-bootstrap/Navbar';\r\nimport Nav from 'react-bootstrap/Nav';\r\nimport Container from 'react-bootstrap/Nav';\r\nimport Form from 'react-bootstrap/Form';\r\nimport FormControl from 'react-bootstrap/FormControl';\r\nimport Button from 'react-bootstrap/Button';\r\nimport {Card} from 'react-bootstrap';\r\n\r\nimport web3 from '../../ethereum/web3'\r\nimport {Router}from '../../routes';\r\nimport vote from '../../ethereum/Vote/vote';\r\nimport registry from '../../ethereum/Vote/registry';\r\n\r\nconst show_btn = function( stage ){\r\n    if (stage != 0 ) return null;\r\n    //console.log(stage);\r\n    return (\r\n        <div>this vote still needs setting please wait</div>\r\n    );\r\n};\r\nclass Register_btn extends Component{\r\n//const register_btn =function ( stage ){\r\n    constructor(props) {\r\n        super(props);\r\n        this.state ={\r\n            registry_addr:\"\"\r\n        };\r\n        this.register = this.register.bind(this);\r\n      }\r\n      async register(){\r\n          //0x42309f924237Bac662Af64965A2efAF8c08fE4d2\r\n        const accounts = await web3.eth.getAccounts();\r\n        const Vote_event =await vote(this.props.address);\r\n        let requirements = await Vote_event.methods.requirement();\r\n        console.log(requirements);\r\n        var hash = CryptoJS.SHA3(\"human\", { outputLength: 256 }).toString();\r\n        //console.log(web3.utils.fromAscii(hash));\r\n        try{\r\n            //await Vote_event.methods.register('0x'+hash,this.state.registry_addr).send({from:accounts[0]});\r\n            await Vote_event.methods.register(requirement,this.state.registry_addr).send({from:accounts[0]});\r\n            Router.pushRoute(`/Vote/vote/${this.props.mb_addr}/${this.props.address}`);\r\n        } catch (err) {\r\n            alert(err.message);\r\n        }\r\n    }\r\n    render(){\r\n    //console.log(this.props.stage );\r\n    if (this.props.stage != 1 ) return null;\r\n  \r\n    return (\r\n        <>\r\n        <FormControl type=\"text\" placeholder=\"enter your registry number\" className=\"mr-sm-2\"\r\n                value={this.state.registry_addr} \r\n                onChange = {event => this.setState({registry_addr:event.target.value})} />\r\n        <Button variant=\"outline-info\"style={{margin :\"2%\"}} onClick={this.register}>register</Button>\r\n        </>\r\n    );\r\n    }\r\n};\r\nclass Vote_btn extends Component{\r\n    constructor(props) {\r\n        super(props);\r\n        this.state ={\r\n            vote_value:0\r\n        };\r\n        this.go_vote = this.go_vote.bind(this);\r\n      }\r\n    async go_vote(){\r\n        console.log(this.state.vote_value);\r\n        const accounts = await web3.eth.getAccounts();\r\n        const Vote_event =await vote(this.props.address);\r\n        try{\r\n            await Vote_event.methods.can_vote(this.state.vote_value).send({from:accounts[0]});\r\n            Router.pushRoute(`/Vote/vote/${this.props.mb_addr}/${this.props.address}`);\r\n        } catch (err) {\r\n            alert(err.message);\r\n        }\r\n    }\r\n    render(){\r\n    if (this.props.stage != 2 ) return null;\r\n  \r\n    return (\r\n        <>\r\n        <Form style={{width:'33%', margin: 'auto', marginTop : \"2%\"}} >\r\n        <Form.Group >\r\n            <Form.Control as=\"select\" size=\"lg\"  onChange = {event => this.setState({vote_value:event.target.value})}>\r\n                \r\n                {this.props.ops.map((op, index) => <option value={index}>{op}</option>)}\r\n                {/*<option>Korean Fish</option>\r\n                <option>Donald Trump</option>\r\n                <option>Xi DADA</option>*/}\r\n            </Form.Control>\r\n        </Form.Group>\r\n        <Button variant=\"outline-info\"style={{margin :\"2%\"}}  onClick={this.go_vote}>Vote</Button>\r\n        </Form>\r\n        </>\r\n    );\r\n    }\r\n};\r\n\r\nclass Votesss extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state ={\r\n          search:\"\",\r\n          loading : false,\r\n          loading2: false,\r\n          stage:'',\r\n          search:'',\r\n          errorMessage:'',\r\n          html_test:null,\r\n          mailbox_addr:''\r\n        };\r\n      //console.log(props.query.address);//擷取這個網址的url那part的address(from routes??)  \r\n      this.refresh_search = this.refresh_search.bind(this);\r\n      }\r\n    static async getInitialProps(props){\r\n        const{address, mb_addr} = props.query;\r\n        const Vote_event =await vote(address);\r\n        const stage = await Vote_event.methods.return_stage().call();\r\n        \r\n        const option_length = await Vote_event.methods.return_options_length().call();\r\n        const stage_str =  (stage == 0)?\"stage : Setup\":\r\n                           (stage == 1)?\"stage : Register\":\r\n                           (stage == 2)?\"stage : Vote\":\r\n                           (stage == 3)?\"stage : Tally\":\r\n                           (stage == 4)?\"stage : Finish\":\"stage : Setup\";\r\n        var options = [];\r\n        for (let index = 0; index < option_length; index++) {\r\n            let temp = await Vote_event.methods.return_options(index).call();\r\n            options.push(temp);\r\n        }\r\n        return{address,Vote_event,stage,option_length,stage_str,options,mb_addr};\r\n    }\r\n    refresh_search(){\r\n        if(this.state.search != \"\")\r\n        Router.pushRoute(`/Vote/vote/${this.state.search}`);\r\n        //console.log(this.props.address);\r\n    }\r\n    render() {\r\n        return(\r\n        <>\r\n         <link rel=\"stylesheet\" href=\"https://maxcdn.bootstrapcdn.com/bootstrap/4.5.0/css/bootstrap.min.css\" integrity=\"sha384-9aIt2nRpC12Uk9gS9baDl411NQApFmC26EwAOH8WgZl5MYYxFfc+NcPb1dKGj7Sk\" crossOrigin=\"anonymous\"/>\r\n         <script src=\"https://cdnjs.cloudflare.com/ajax/libs/crypto-js/3.1.9-1/crypto-js.js\"></script>\r\n         <Container>\r\n         <Navbar bg=\"dark\" variant=\"dark\"style={{width:\"100%\"}}>\r\n            <Navbar.Brand >Vote</Navbar.Brand>\r\n             <Nav className=\"mr-auto\" style={{width:\"50%\"}}>\r\n                <Link route={\"/Vote/home/\"+ this.props.mb_addr }  ><a style={{color: \"white\", width:\"100px\"}}>Home</a></Link>\r\n                <Link route={\"/Vote/status/\"+this.props.mb_addr+\"/\"+this.props.address} ><a style={{color: \"white\", width:\"100px\"}}>Status</a></Link>\r\n                <Link route={\"/Vote/index\" }  ><a style={{color: \"white\", width:\"100px\"}}>Logout</a></Link>\r\n             </Nav>\r\n            \r\n        </Navbar>\r\n        <div style={{width: '100%'}}>\r\n\r\n        <Form inline style={{ width: '33%' , margin: 'auto' , marginTop : \"2%\"}}>\r\n            <div style={{color : \"black\"}} > inesrt your vote contract address here  -&gt;   </div>\r\n            <FormControl type=\"text\" placeholder=\"Search\" className=\"mr-sm-2\"\r\n                value={this.state.search} \r\n                onChange = {event => this.setState({search:event.target.value})} />\r\n            <Button variant=\"outline-info\" onClick={this.refresh_search}>Search</Button>\r\n            </Form>\r\n        <Card style={{ width: '33%' , margin: 'auto' , marginTop : \"2%\"}}>\r\n            <Card.Body>\r\n                <Card.Title>Election</Card.Title>\r\n                <Card.Subtitle className=\"mb-2 text-muted\">voter address : {this.props.address}</Card.Subtitle>\r\n                <Card.Text>\r\n                    View the latest 2020 presidential polls and head-to-head match-up between Joe Biden and Donald Trump. For more information, view cnn.com/election.\r\n                </Card.Text>\r\n                <Card.Text>{this.props.stage_str}</Card.Text>\r\n                {show_btn(this.props.stage)}\r\n                <Register_btn stage ={this.props.stage} address = {this.props.address} mb_addr={this.props.mb_addr}></Register_btn>\r\n                <Vote_btn stage ={this.props.stage} ops = {this.props.options} address = {this.props.address} mb_addr={this.props.mb_addr}></Vote_btn>\r\n            </Card.Body>\r\n        </Card>\r\n        </div>\r\n        <div style={{ width: '100%'}}>\r\n        </div>\r\n      </Container>\r\n        </>\r\n    )\r\n    }\r\n}\r\n\r\n\r\nexport default Votesss;"]},"metadata":{},"sourceType":"module"}