{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { Component } from 'react';\nimport { Button, Form, Input, Message } from 'semantic-ui-react';\nimport Layout from '../../../components/Layout';\nimport { Link } from '../../../routes';\nimport web3 from '../../../ethereum/academic/web3';\nimport verify from '../../../ethereum/academic/verify';\n\nclass UploadIndex extends Component {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"state\", {\n      selectedFile: null,\n      hashValue: null,\n      newSchool: null,\n      message: null\n    });\n\n    _defineProperty(this, \"onFileChange\", event => {\n      this.setState({\n        selectedFile: event.target.files[0]\n      });\n      const curFile = event.target.files[0];\n      const reader = new FileReader();\n      reader.readAsText(curFile);\n\n      reader.onload = function (e) {\n        //console.log('file:', e.target.result);\n        let jsonData = JSON.parse(this.result);\n        console.log(jsonData); // hash json\n\n        let reader = new FileReader();\n        reader.readAsArrayBuffer(curFile);\n\n        reader.onload = function (e) {\n          var wordArray = CryptoJS.lib.WordArray.create(reader.result);\n          var hash = CryptoJS.SHA256(wordArray).toString();\n          this.hashValue = hash;\n          console.log(this.hashValue);\n        };\n      };\n    });\n\n    _defineProperty(this, \"fileData\", () => {\n      if (this.state.selectedFile) {\n        return __jsx(\"div\", null, __jsx(\"h2\", null, \"File Details:\"), __jsx(\"p\", null, \"File Name: \", this.state.selectedFile.name), __jsx(\"p\", null, \"File Type: \", this.state.selectedFile.type));\n      }\n    });\n\n    _defineProperty(this, \"onClick\", async () => {\n      const accounts = await web3.eth.getAccounts();\n      this.setState({\n        message: 'Waiting on uploading success...'\n      });\n      console.log(this.hashValue); //await verify.methods.upload(this.hashValue).call();\n\n      this.setState({\n        message: 'A certificate has been uploaded!'\n      });\n    });\n  }\n\n  render() {\n    return __jsx(Layout, null, __jsx(\"script\", {\n      src: \"https://cdnjs.cloudflare.com/ajax/libs/crypto-js/3.1.9-1/crypto-js.js\"\n    }), __jsx(\"h1\", null, \"Upload Certificates\"), __jsx(Form, null, __jsx(\"h3\", null, \"Choose a JSON file\"), __jsx(\"input\", {\n      type: \"file\",\n      onChange: this.onFileChange,\n      accept: \"application/json\",\n      style: {\n        marginBottom: 20\n      }\n    }), this.fileData(), __jsx(Link, {\n      route: `Academic/school/${this.hashValue}/success`\n    }, __jsx(\"a\", null, __jsx(Button, {\n      onClick: this.onClick,\n      content: \"Upload\",\n      icon: \"upload\",\n      primary: true,\n      style: {\n        marginTop: 10,\n        marginBottom: 20\n      }\n    }))), __jsx(Form.Field, null, __jsx(\"h3\", null, \"Add new school\"), __jsx(Input, {\n      value: this.state.newSchool,\n      onChange: event => this.setState({\n        newSchool: event.target.value\n      })\n    })), __jsx(\"a\", null, __jsx(Button, {\n      content: \"Add\",\n      icon: \"add\",\n      primary: true\n    }))));\n  }\n\n}\n\nexport default UploadIndex;","map":{"version":3,"sources":["C:/Users/user/Desktop/college/Blockchain/DApp/nextjs-web/pages/Academic/school/index.js"],"names":["React","Component","Button","Form","Input","Message","Layout","Link","web3","verify","UploadIndex","selectedFile","hashValue","newSchool","message","event","setState","target","files","curFile","reader","FileReader","readAsText","onload","e","jsonData","JSON","parse","result","console","log","readAsArrayBuffer","wordArray","CryptoJS","lib","WordArray","create","hash","SHA256","toString","state","name","type","accounts","eth","getAccounts","render","onFileChange","marginBottom","fileData","onClick","marginTop","value"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport { Button, Form, Input, Message } from 'semantic-ui-react';\r\nimport Layout from '../../../components/Layout';\r\nimport { Link } from '../../../routes';\r\nimport web3 from '../../../ethereum/academic/web3';\r\nimport verify from '../../../ethereum/academic/verify';\r\n\r\nclass UploadIndex extends Component {\r\n  state = { \r\n    selectedFile: null,\r\n    hashValue: null,\r\n    newSchool: null,\r\n    message: null\r\n  };\r\n\r\n  onFileChange = event => {\r\n    this.setState({ selectedFile: event.target.files[0] });\r\n\r\n    const curFile = event.target.files[0];\r\n    const reader = new FileReader();\r\n    reader.readAsText(curFile);\r\n    reader.onload = function (e) {\r\n      //console.log('file:', e.target.result);\r\n      let jsonData = JSON.parse(this.result);\r\n      console.log(jsonData);\r\n\r\n      // hash json\r\n      let reader = new FileReader();\r\n      reader.readAsArrayBuffer(curFile);\r\n      reader.onload = function (e) {\r\n        var wordArray = CryptoJS.lib.WordArray.create(reader.result);\r\n        var hash = CryptoJS.SHA256(wordArray).toString();\r\n        this.hashValue = hash;\r\n        console.log(this.hashValue);\r\n      };\r\n    };\r\n  };\r\n\r\n  fileData = () => {\r\n    if (this.state.selectedFile) {\r\n      return (\r\n        <div>\r\n          <h2>File Details:</h2>\r\n          <p>File Name: {this.state.selectedFile.name}</p>\r\n          <p>File Type: {this.state.selectedFile.type}</p>\r\n        </div>\r\n      );\r\n    }\r\n  };\r\n\r\n  onClick = async () => {\r\n    const accounts = await web3.eth.getAccounts();\r\n\r\n    this.setState({ message: 'Waiting on uploading success...' })\r\n\r\n    console.log(this.hashValue);\r\n    //await verify.methods.upload(this.hashValue).call();\r\n\r\n    this.setState({ message: 'A certificate has been uploaded!' })\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Layout>\r\n        <script src=\"https://cdnjs.cloudflare.com/ajax/libs/crypto-js/3.1.9-1/crypto-js.js\"></script>\r\n        <h1>Upload Certificates</h1>\r\n        <Form>\r\n          <h3>Choose a JSON file</h3>\r\n          <input\r\n            type=\"file\"\r\n            onChange={this.onFileChange}\r\n            accept=\"application/json\"\r\n            style={{ marginBottom: 20 }}\r\n          />\r\n          {this.fileData()}\r\n          <Link route={`Academic/school/${this.hashValue}/success`}>\r\n            <a>\r\n              <Button\r\n                onClick={this.onClick}\r\n                content='Upload'\r\n                icon='upload'\r\n                primary={true}\r\n                style={{ marginTop: 10, marginBottom: 20 }}\r\n              />\r\n            </a>\r\n          </Link>\r\n          <Form.Field>\r\n            <h3>Add new school</h3>\r\n            <Input\r\n              value={this.state.newSchool}\r\n              onChange={event =>\r\n                this.setState({ newSchool: event.target.value })}\r\n            />\r\n          </Form.Field>\r\n          <a>\r\n              <Button\r\n                content='Add'\r\n                icon='add'\r\n                primary={true}\r\n              />\r\n            </a>\r\n        </Form>\r\n      </Layout>\r\n    );\r\n  }\r\n}\r\n\r\nexport default UploadIndex;"]},"metadata":{},"sourceType":"module"}