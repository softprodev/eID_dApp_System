{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { Component } from 'react';\nimport { Button, Form } from 'semantic-ui-react';\nimport Layout from '../../components/Layout';\nimport { Link } from '../../routes';\n\nconst path = require('path'); //const fs = require('fs-extra');\n\n\nclass CertificateIndex extends Component {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"state\", {\n      selectedFile: null,\n      hashValue: null\n    });\n\n    _defineProperty(this, \"onFileChange\", event => {\n      this.setState({\n        selectedFile: event.target.files[0]\n      });\n      const curFile = event.target.files[0];\n      const reader = new FileReader();\n      reader.readAsText(curFile);\n\n      reader.onload = function (e) {\n        //console.log('file:', e.target.result);\n        let jsonData = JSON.parse(this.result);\n        console.log(jsonData); // hash json\n\n        let reader = new FileReader();\n        let hash;\n        reader.readAsArrayBuffer(curFile);\n\n        reader.onload = event => {\n          var wordArray = CryptoJS.lib.WordArray.create(reader.result);\n          hash = CryptoJS.SHA256(wordArray).toString();\n          this.setState({\n            hashValue: hash\n          });\n          console.log(hash);\n        };\n      }; // build\n      // const buildPath = path.resolve(__dirname, 'build');\n      // fs.removeSync(buildPath);\n      // const source = fs.readFileSync(jsonData, 'utf8');\n      // const output = solc.compile(source, 1).contracts;\n      // fs.ensureDirSync(buildPath);\n      // //console.log(output);\n      // for (let contract in output) {\n      //   //console.log(contract);\n      //   fs.outputJsonSync(\n      //     path.resolve(buildPath, contract.replace(':', '') + '.json'),\n      //     output[contract]\n      //   );\n      // }\n\n    });\n\n    _defineProperty(this, \"fileData\", () => {\n      if (this.state.selectedFile) {\n        return __jsx(\"div\", null, __jsx(\"h2\", null, \"File Details:\"), __jsx(\"p\", null, \"File Name: \", this.state.selectedFile.name), __jsx(\"p\", null, \"File Type: \", this.state.selectedFile.type));\n      }\n    });\n  }\n\n  render() {\n    return __jsx(Layout, null, __jsx(\"script\", {\n      src: \"https://cdnjs.cloudflare.com/ajax/libs/crypto-js/3.1.9-1/crypto-js.js\"\n    }), __jsx(\"h1\", null, \"Verify Certificates\"), __jsx(Form, null, __jsx(\"h3\", null, \"Choose a JSON file\"), __jsx(\"input\", {\n      type: \"file\",\n      onChange: this.onFileChange,\n      accept: \"application/json\",\n      style: {\n        marginBottom: 20\n      }\n    }), this.fileData(), __jsx(Link, {\n      route: `/Academic/certificates/${this.hashValue}/success`\n    }, __jsx(\"a\", null, __jsx(Button, {\n      content: \"Verify\",\n      icon: \"check circle outline\",\n      primary: true,\n      style: {\n        marginTop: 20\n      }\n    })))));\n  }\n\n}\n\nexport default CertificateIndex;","map":{"version":3,"sources":["C:/Users/user/Desktop/college/Blockchain/DApp/nextjs-web/pages/Academic/index.js"],"names":["React","Component","Button","Form","Layout","Link","path","require","CertificateIndex","selectedFile","hashValue","event","setState","target","files","curFile","reader","FileReader","readAsText","onload","e","jsonData","JSON","parse","result","console","log","hash","readAsArrayBuffer","wordArray","CryptoJS","lib","WordArray","create","SHA256","toString","state","name","type","render","onFileChange","marginBottom","fileData","marginTop"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport { Button, Form } from 'semantic-ui-react';\r\nimport Layout from '../../components/Layout';\r\nimport { Link } from '../../routes';\r\nconst path = require('path');\r\n//const fs = require('fs-extra');\r\n\r\nclass CertificateIndex extends Component {\r\n  state = { \r\n    selectedFile: null,\r\n    hashValue: null\r\n  };\r\n\r\n  onFileChange = event => {\r\n    this.setState({ selectedFile: event.target.files[0] });\r\n\r\n    const curFile = event.target.files[0];\r\n    const reader = new FileReader();\r\n    reader.readAsText(curFile);\r\n    reader.onload = function (e) {\r\n      //console.log('file:', e.target.result);\r\n      let jsonData = JSON.parse(this.result);\r\n      console.log(jsonData);\r\n\r\n      // hash json\r\n      let reader = new FileReader();\r\n      let hash;\r\n      reader.readAsArrayBuffer(curFile);\r\n      reader.onload = event => {\r\n        var wordArray = CryptoJS.lib.WordArray.create(reader.result);\r\n        hash = CryptoJS.SHA256(wordArray).toString();\r\n        this.setState({ hashValue: hash });\r\n        console.log(hash);\r\n      };\r\n    };\r\n    \r\n\r\n    // build\r\n    // const buildPath = path.resolve(__dirname, 'build');\r\n    // fs.removeSync(buildPath);\r\n\r\n    // const source = fs.readFileSync(jsonData, 'utf8');\r\n    // const output = solc.compile(source, 1).contracts;\r\n\r\n    // fs.ensureDirSync(buildPath);\r\n\r\n    // //console.log(output);\r\n    // for (let contract in output) {\r\n    //   //console.log(contract);\r\n    //   fs.outputJsonSync(\r\n    //     path.resolve(buildPath, contract.replace(':', '') + '.json'),\r\n    //     output[contract]\r\n    //   );\r\n    // }\r\n  };\r\n\r\n  fileData = () => {\r\n    if (this.state.selectedFile) {\r\n      return (\r\n        <div>\r\n          <h2>File Details:</h2>\r\n          <p>File Name: {this.state.selectedFile.name}</p>\r\n          <p>File Type: {this.state.selectedFile.type}</p>\r\n        </div>\r\n      );\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <Layout>\r\n        <script src=\"https://cdnjs.cloudflare.com/ajax/libs/crypto-js/3.1.9-1/crypto-js.js\"></script>\r\n        <h1>Verify Certificates</h1>\r\n        <Form>\r\n          <h3>Choose a JSON file</h3>\r\n          <input\r\n            type=\"file\"\r\n            onChange={this.onFileChange}\r\n            accept=\"application/json\"\r\n            style={{ marginBottom: 20 }}\r\n          />\r\n          {this.fileData()}\r\n          <Link route={`/Academic/certificates/${this.hashValue}/success`}>\r\n            <a>\r\n              <Button\r\n                content='Verify'\r\n                icon='check circle outline'\r\n                primary={true}\r\n                style={{ marginTop: 20 }}\r\n              />\r\n            </a>\r\n          </Link>\r\n\r\n        </Form>\r\n      </Layout>\r\n    );\r\n  }\r\n}\r\n\r\nexport default CertificateIndex;"]},"metadata":{},"sourceType":"module"}