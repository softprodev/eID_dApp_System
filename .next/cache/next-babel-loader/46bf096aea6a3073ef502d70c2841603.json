{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nvar __jsx = React.createElement;\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component, useState } from 'react';\nimport { Link } from '../routes';\nimport Navbar from 'react-bootstrap/Navbar';\nimport Nav from 'react-bootstrap/Nav';\nimport Container from 'react-bootstrap/Nav';\nimport Form from 'react-bootstrap/Form';\nimport FormControl from 'react-bootstrap/FormControl';\nimport Button from 'react-bootstrap/Button';\nimport DatePicker from \"react-datepicker\";\nimport web3 from '../ethereum/web3';\nimport { Router } from '../routes';\nimport vote from '../ethereum/vote';\n\nvar admin = /*#__PURE__*/function (_Component) {\n  _inherits(admin, _Component);\n\n  var _super = _createSuper(admin);\n\n  function admin(props) {\n    var _this;\n\n    _classCallCheck(this, admin);\n\n    _this = _super.call(this, props);\n    _this.state = {\n      register_start_date: new Date(),\n      register_end_date: new Date(),\n      vote_start_date: new Date(),\n      vote_end_date: new Date(),\n      requirement: '',\n      question: '',\n      option: '',\n      loading: false,\n      loading2: false,\n      errorMessage: ''\n    }; //console.log(props.query.address);//擷取這個網址的url那part的address(from routes??)  \n\n    _this.submit_setting = _this.submit_setting.bind(_assertThisInitialized(_this));\n    _this.submit_option = _this.submit_option.bind(_assertThisInitialized(_this)); //const [ register_start_date, setDate ] = useState(new Date());\n\n    return _this;\n  }\n\n  _createClass(admin, [{\n    key: \"submit_setting\",\n    value: function () {\n      var _submit_setting = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(event) {\n        var Vote, _this$state, register_start_date, register_end_date, vote_start_date, vote_end_date, requirement, question, accounts;\n\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                event.preventDefault();\n                Vote = vote(this.props.address);\n                _this$state = this.state, register_start_date = _this$state.register_start_date, register_end_date = _this$state.register_end_date, vote_start_date = _this$state.vote_start_date, vote_end_date = _this$state.vote_end_date, requirement = _this$state.requirement, question = _this$state.question; //console.log(this.state.register_end_date.getTime());\n                //console.log(register_start_date);\n\n                this.setState({\n                  loading: true,\n                  errorMessage: ''\n                });\n                _context.prev = 4;\n                _context.next = 7;\n                return web3.eth.getAccounts();\n\n              case 7:\n                accounts = _context.sent;\n                _context.next = 10;\n                return Vote.methods.set_up_all(question, register_start_date.getTime(), register_end_date.getTime(), vote_start_date.getTime(), vote_end_date.getTime(), requirement).send({\n                  from: accounts[0]\n                });\n\n              case 10:\n                //Router.pushRoute(`/campaigns/${this.props.address}/requests`)\n                alert(\"Setting Successfully\");\n                _context.next = 16;\n                break;\n\n              case 13:\n                _context.prev = 13;\n                _context.t0 = _context[\"catch\"](4);\n                alert(_context.t0);\n\n              case 16:\n                this.setState({\n                  loading: false\n                });\n\n              case 17:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this, [[4, 13]]);\n      }));\n\n      function submit_setting(_x) {\n        return _submit_setting.apply(this, arguments);\n      }\n\n      return submit_setting;\n    }()\n  }, {\n    key: \"submit_option\",\n    value: function () {\n      var _submit_option = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n        var Vote, option, accounts;\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                event.preventDefault();\n                Vote = vote(this.props.address);\n                option = this.state.option; //console.log(this.state.register_end_date.getTime());\n                //console.log(register_start_date);\n\n                this.setState({\n                  loading2: true\n                });\n                _context2.prev = 4;\n                _context2.next = 7;\n                return web3.eth.getAccounts();\n\n              case 7:\n                accounts = _context2.sent;\n                _context2.next = 10;\n                return Vote.methods.set_up_options().send({\n                  from: accounts[0]\n                });\n\n              case 10:\n                //Router.pushRoute(`/campaigns/${this.props.address}/requests`)\n                alert(\"Setting Option Successfully\");\n                _context2.next = 16;\n                break;\n\n              case 13:\n                _context2.prev = 13;\n                _context2.t0 = _context2[\"catch\"](4);\n                alert(_context2.t0);\n\n              case 16:\n                this.setState({\n                  loading: false\n                });\n\n              case 17:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this, [[4, 13]]);\n      }));\n\n      function submit_option() {\n        return _submit_option.apply(this, arguments);\n      }\n\n      return submit_option;\n    }() //還可能要有顯示目前option的功能\n\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      //const [date, setDate] = useState(new Date());\n      return __jsx(React.Fragment, null, __jsx(\"link\", {\n        rel: \"stylesheet\",\n        href: \"https://maxcdn.bootstrapcdn.com/bootstrap/4.5.0/css/bootstrap.min.css\",\n        integrity: \"sha384-9aIt2nRpC12Uk9gS9baDl411NQApFmC26EwAOH8WgZl5MYYxFfc+NcPb1dKGj7Sk\",\n        crossOrigin: \"anonymous\"\n      }), __jsx(\"link\", {\n        rel: \"stylesheet\",\n        href: \"https://cdnjs.cloudflare.com/ajax/libs/react-datepicker/3.1.3/react-datepicker.min.css\",\n        integrity: \"sha512-Nc2rvPMo6xXLoInVUZRxo3qMVFCQ8o1PzK/9eGjutJvr0Y/PM6u4Gg5Rg3xO33jsAq9L4Uc/PM0bitnlOh0wpw==\",\n        crossorigin: \"anonymous\"\n      }), __jsx(Container, null, __jsx(Navbar, {\n        bg: \"dark\",\n        variant: \"dark\",\n        style: {\n          width: \"100%\"\n        }\n      }, __jsx(Navbar.Brand, null, __jsx(Link, {\n        route: \"/vote\"\n      }, __jsx(\"a\", {\n        style: {\n          color: \"white\",\n          width: \"100px\"\n        }\n      }, \"Vote\"))), __jsx(Nav, {\n        className: \"mr-auto\",\n        style: {\n          width: \"50%\"\n        }\n      }, __jsx(Link, {\n        route: \"/home\"\n      }, __jsx(\"a\", {\n        style: {\n          color: \"white\",\n          width: \"100px\"\n        }\n      }, \"Home\")), __jsx(Link, {\n        route: \"/status\"\n      }, __jsx(\"a\", {\n        style: {\n          color: \"white\",\n          width: \"100px\"\n        }\n      }, \"Status\"))), __jsx(Form, {\n        inline: true\n      }, __jsx(\"div\", {\n        style: {\n          color: \"white\"\n        }\n      }, \" inesrt your vote contract address here  ->   \"), __jsx(FormControl, {\n        type: \"text\",\n        placeholder: \"Search\",\n        className: \"mr-sm-2\"\n      }), __jsx(Button, {\n        variant: \"outline-info\"\n      }, \"Search\"))), __jsx(\"div\", {\n        style: {\n          margin: \"auto\"\n        }\n      }, __jsx(Form, {\n        style: {\n          margin: \"auto\",\n          marginTop: \"3%\"\n        },\n        onSubmit: this.submit_setting\n      }, __jsx(\"h2\", null, \"Edit Setting\"), __jsx(Form.Row, null, __jsx(Form.Group, {\n        as: \"new_vote\",\n        controlId: \"Issue\"\n      }, __jsx(Form.Label, null, \"The Issue you want to vote\"), __jsx(Form.Control, {\n        type: \"text\",\n        placeholder: \"Enter issue\",\n        value: this.state.question,\n        onChange: function onChange(event) {\n          return _this2.setState({\n            question: event.target.value\n          });\n        }\n      }))), __jsx(Form.Row, null, __jsx(Form.Group, {\n        as: \"register_start_date\",\n        controlId: \"register_start_date\"\n      }, __jsx(Form.Label, null, \"register_start_date\"), __jsx(DatePicker, {\n        selected: this.state.register_start_date,\n        onChange: function onChange(date) {\n          _this2.setState({\n            register_start_date: date\n          });\n        }\n      })), __jsx(Form.Group, {\n        as: \"register_end_date\",\n        controlId: \"register_end_date\"\n      }, __jsx(Form.Label, null, \"register_end_date\"), __jsx(DatePicker, {\n        selected: this.state.register_end_date,\n        onChange: function onChange(date) {\n          _this2.setState({\n            register_end_date: date\n          });\n        }\n      }))), __jsx(Form.Row, null, __jsx(Form.Group, {\n        as: \"vote_start_date\",\n        controlId: \"vote_start_date\"\n      }, __jsx(Form.Label, null, \"vote_start_date\"), __jsx(DatePicker, {\n        selected: this.state.vote_start_date,\n        onChange: function onChange(date) {\n          _this2.setState({\n            vote_start_date: date\n          });\n        }\n      })), __jsx(Form.Group, {\n        as: \"vote_end_date\",\n        controlId: \"vote_end_date\"\n      }, __jsx(Form.Label, null, \"vote_end_date\"), __jsx(DatePicker, {\n        selected: this.state.vote_end_date,\n        onChange: function onChange(date) {\n          _this2.setState({\n            vote_end_date: date\n          });\n        }\n      }))), __jsx(Form.Row, null, __jsx(Form.Group, {\n        as: \"requirement\",\n        controlId: \"requirement\"\n      }, __jsx(Form.Label, null, \"vote requirement\"), __jsx(Form.Control, {\n        type: \"text\",\n        placeholder: \"Enter requirement\",\n        value: this.state.requirement,\n        onChange: function onChange(event) {\n          return _this2.setState({\n            requirement: event.target.value\n          });\n        }\n      }))), __jsx(Button, {\n        variant: \"primary\",\n        type: \"submit\"\n      }, \"Setting\")), __jsx(Form, {\n        style: {\n          margin: \"auto\",\n          marginTop: \"3%\"\n        },\n        onSubmit: this.submit_setting\n      }, __jsx(\"h2\", null, \"Set options one by one\"), __jsx(Form.Row, null, __jsx(Form.Group, {\n        controlId: \"option\"\n      }, __jsx(Form.Label, null, \"option\"), __jsx(Form.Control, {\n        type: \"text\",\n        placeholder: \"option\",\n        value: this.state.option,\n        onChange: function onChange(event) {\n          return _this2.setState({\n            option: event.target.value\n          });\n        }\n      }))), __jsx(Button, {\n        variant: \"primary\",\n        type: \"submit\"\n      }, \"Set options\")))));\n    }\n  }], [{\n    key: \"getInitialProps\",\n    value: function () {\n      var _getInitialProps = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3(props) {\n        var address;\n        return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                address = props.query.address;\n                return _context3.abrupt(\"return\", {\n                  address: address\n                });\n\n              case 2:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3);\n      }));\n\n      function getInitialProps(_x2) {\n        return _getInitialProps.apply(this, arguments);\n      }\n\n      return getInitialProps;\n    }()\n  }]);\n\n  return admin;\n}(Component);\n\nexport default admin;","map":{"version":3,"sources":["/Users/suvincent/vote-web/pages/admin.js"],"names":["React","Component","useState","Link","Navbar","Nav","Container","Form","FormControl","Button","DatePicker","web3","Router","vote","admin","props","state","register_start_date","Date","register_end_date","vote_start_date","vote_end_date","requirement","question","option","loading","loading2","errorMessage","submit_setting","bind","submit_option","event","preventDefault","Vote","address","setState","eth","getAccounts","accounts","methods","set_up_all","getTime","send","from","alert","set_up_options","width","color","margin","marginTop","target","value","date","query"],"mappings":"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","sourcesContent":["import React, { Component,useState } from 'react';\r\nimport{Link}from '../routes';\r\n\r\nimport Navbar from 'react-bootstrap/Navbar';\r\nimport Nav from 'react-bootstrap/Nav';\r\nimport Container from 'react-bootstrap/Nav';\r\nimport Form from 'react-bootstrap/Form';\r\nimport FormControl from 'react-bootstrap/FormControl';\r\nimport Button from 'react-bootstrap/Button';\r\nimport DatePicker from \"react-datepicker\";\r\n\r\nimport web3 from '../ethereum/web3'\r\nimport {Router}from '../routes';\r\nimport vote from '../ethereum/vote';\r\n\r\n\r\nclass admin extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state ={\r\n          register_start_date:new Date(),\r\n          register_end_date:new Date(),\r\n          vote_start_date:new Date(),\r\n          vote_end_date:new Date(),\r\n          requirement:'',\r\n          question:'',\r\n          option:'',\r\n          loading : false,\r\n          loading2: false,\r\n          errorMessage:''\r\n        };\r\n      //console.log(props.query.address);//擷取這個網址的url那part的address(from routes??)  \r\n      this.submit_setting = this.submit_setting.bind(this);\r\n      this.submit_option = this.submit_option.bind(this);\r\n      //const [ register_start_date, setDate ] = useState(new Date());\r\n      }\r\n    static async getInitialProps(props){\r\n        const{address} = props.query;\r\n        return{address};\r\n    }\r\n    async submit_setting(event){\r\n        event.preventDefault();\r\n\r\n        const Vote = vote(this.props.address);\r\n\r\n        const {register_start_date,register_end_date,vote_start_date,vote_end_date,requirement,question} = this.state;\r\n        //console.log(this.state.register_end_date.getTime());\r\n        //console.log(register_start_date);\r\n        this.setState({loading:true,errorMessage:''});\r\n        \r\n        try{\r\n            const accounts = await web3.eth.getAccounts();\r\n            await Vote.methods.set_up_all(\r\n                question,\r\n                register_start_date.getTime(),\r\n                register_end_date.getTime(),\r\n                vote_start_date.getTime(),\r\n                vote_end_date.getTime(),\r\n                requirement\r\n            ).send(\r\n                {from:accounts[0]}\r\n            );\r\n            //Router.pushRoute(`/campaigns/${this.props.address}/requests`)\r\n            alert(\"Setting Successfully\")\r\n        }catch(err){\r\n            alert(err);\r\n        }\r\n        this.setState({loading:false});\r\n    }\r\n    async submit_option(){\r\n        event.preventDefault();\r\n\r\n        const Vote = vote(this.props.address);\r\n\r\n        const {option} = this.state;\r\n        //console.log(this.state.register_end_date.getTime());\r\n        //console.log(register_start_date);\r\n        this.setState({loading2:true});\r\n        \r\n        try{\r\n            const accounts = await web3.eth.getAccounts();\r\n            await Vote.methods.set_up_options(\r\n                \r\n            ).send(\r\n                {from:accounts[0]}\r\n            );\r\n            //Router.pushRoute(`/campaigns/${this.props.address}/requests`)\r\n            alert(\"Setting Option Successfully\")\r\n        }catch(err){\r\n            alert(err);\r\n        }\r\n        this.setState({loading:false});\r\n    }\r\n    //還可能要有顯示目前option的功能\r\n    render() {\r\n        //const [date, setDate] = useState(new Date());\r\n        return(\r\n        <>\r\n         <link rel=\"stylesheet\" href=\"https://maxcdn.bootstrapcdn.com/bootstrap/4.5.0/css/bootstrap.min.css\" integrity=\"sha384-9aIt2nRpC12Uk9gS9baDl411NQApFmC26EwAOH8WgZl5MYYxFfc+NcPb1dKGj7Sk\" crossOrigin=\"anonymous\"/>\r\n         <link rel=\"stylesheet\" href=\"https://cdnjs.cloudflare.com/ajax/libs/react-datepicker/3.1.3/react-datepicker.min.css\" integrity=\"sha512-Nc2rvPMo6xXLoInVUZRxo3qMVFCQ8o1PzK/9eGjutJvr0Y/PM6u4Gg5Rg3xO33jsAq9L4Uc/PM0bitnlOh0wpw==\" crossorigin=\"anonymous\" />\r\n         <Container>\r\n         <Navbar bg=\"dark\" variant=\"dark\"style={{width:\"100%\"}}>\r\n            <Navbar.Brand ><Link route=\"/vote\" ><a style={{color: \"white\", width:\"100px\"}}>Vote</a></Link></Navbar.Brand>\r\n             <Nav className=\"mr-auto\" style={{width:\"50%\"}}>\r\n                <Link route=\"/home\" ><a style={{color: \"white\", width:\"100px\"}}>Home</a></Link>\r\n                <Link route=\"/status\" ><a style={{color: \"white\", width:\"100px\"}}>Status</a></Link>\r\n             </Nav>\r\n            <Form inline>\r\n            <div style={{color : \"white\"}} > inesrt your vote contract address here  -&gt;   </div>\r\n            <FormControl type=\"text\" placeholder=\"Search\" className=\"mr-sm-2\" />\r\n            <Button variant=\"outline-info\">Search</Button>\r\n            </Form>\r\n        </Navbar>\r\n        <div style={{margin:\"auto\"}}>\r\n        <Form style={{ margin :\"auto\",marginTop :\"3%\"}} onSubmit = {this.submit_setting}>\r\n        <h2>Edit Setting</h2>\r\n            <Form.Row>\r\n                <Form.Group as=\"new_vote\" controlId=\"Issue\">\r\n                <Form.Label>The Issue you want to vote</Form.Label>\r\n                <Form.Control type=\"text\" placeholder=\"Enter issue\" \r\n                    value={this.state.question} \r\n                    onChange = {event => this.setState({question:event.target.value})} \r\n                />\r\n                </Form.Group>\r\n\r\n            </Form.Row>{/*\r\n            <Form.Row>\r\n                <Form.Group as=\"gap\" controlId=\"gap\">\r\n                <Form.Label>gap time</Form.Label>\r\n                <Form.Control type=\"number\" placeholder=\"Enter gap time\" />\r\n                </Form.Group>\r\n                <Form.Group as=\"entrance_fee\" controlId=\"entrance_fee\">\r\n                <Form.Label>entrance fee</Form.Label>\r\n                <Form.Control type=\"number\" placeholder=\"entrance fee\" />\r\n                </Form.Group>\r\n            </Form.Row>*/}\r\n            <Form.Row>\r\n                \r\n                <Form.Group as=\"register_start_date\" controlId=\"register_start_date\">\r\n                <Form.Label>register_start_date</Form.Label>\r\n                <DatePicker selected={this.state.register_start_date} \r\n                            onChange={date => {this.setState({register_start_date: date})}}/>\r\n                </Form.Group>\r\n                <Form.Group as=\"register_end_date\"  controlId=\"register_end_date\">\r\n                <Form.Label>register_end_date</Form.Label>\r\n                <DatePicker selected={this.state.register_end_date} \r\n                            onChange={date => {this.setState({register_end_date: date})}} />\r\n                </Form.Group>\r\n            </Form.Row>\r\n\r\n            <Form.Row>\r\n                \r\n                <Form.Group as=\"vote_start_date\" controlId=\"vote_start_date\">\r\n                <Form.Label>vote_start_date</Form.Label>\r\n                <DatePicker selected={this.state.vote_start_date} \r\n                            onChange={date => {this.setState({vote_start_date: date})}} />\r\n                </Form.Group>\r\n                <Form.Group as=\"vote_end_date\"  controlId=\"vote_end_date\">\r\n                <Form.Label>vote_end_date</Form.Label>\r\n                <DatePicker selected={this.state.vote_end_date} \r\n                            onChange={date => {this.setState({vote_end_date: date})}} />\r\n                </Form.Group>\r\n            </Form.Row>\r\n\r\n            <Form.Row>\r\n            <Form.Group as=\"requirement\" controlId=\"requirement\">\r\n                <Form.Label>vote requirement</Form.Label>\r\n                <Form.Control type=\"text\" placeholder=\"Enter requirement\" \r\n                    value={this.state.requirement} \r\n                    onChange = {event => this.setState({requirement:event.target.value})}\r\n                />\r\n                </Form.Group>\r\n                    \r\n            </Form.Row>\r\n\r\n            <Button variant=\"primary\" type=\"submit\">\r\n                Setting\r\n            </Button>\r\n        </Form>\r\n        \r\n        <Form style={{ margin :\"auto\",marginTop :\"3%\"}} onSubmit = {this.submit_setting}>\r\n        <h2>Set options one by one</h2>\r\n            <Form.Row>\r\n                <Form.Group controlId=\"option\">\r\n                    <Form.Label>option</Form.Label>\r\n                    <Form.Control type=\"text\" placeholder=\"option\" \r\n                        value={this.state.option} \r\n                        onChange = {event => this.setState({option:event.target.value})}\r\n                    />\r\n                </Form.Group>\r\n            </Form.Row>\r\n            <Button variant=\"primary\" type=\"submit\">\r\n                Set options\r\n            </Button>\r\n            </Form>\r\n            </div>\r\n      </Container>\r\n        </>\r\n    )\r\n    }\r\n}\r\n\r\n\r\nexport default admin;"]},"metadata":{},"sourceType":"module"}