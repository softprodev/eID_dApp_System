{"ast":null,"code":"var __jsx = React.createElement;\nimport React, { Component } from 'react';\nimport { Link } from '../../routes';\nimport Navbar from 'react-bootstrap/Navbar';\nimport Nav from 'react-bootstrap/Nav';\nimport Container from 'react-bootstrap/Nav';\nimport Form from 'react-bootstrap/Form';\nimport FormControl from 'react-bootstrap/FormControl';\nimport Button from 'react-bootstrap/Button';\nimport { Card, Table } from 'react-bootstrap';\nimport ReactShadowScroll from 'react-shadow-scroll';\nimport web3 from '../../ethereum/web3';\nimport { Router } from '../../routes';\nimport vote from '../../ethereum/Vote/vote';\n\nclass Status extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      search: \"\",\n      register: \"\",\n      register_answer: \"\",\n      loading: false,\n      loading2: false,\n      errorMessage: ''\n    };\n    this.refresh_search = this.refresh_search.bind(this);\n    this.search_register = this.search_register.bind(this);\n  }\n\n  static async getInitialProps(props) {\n    const {\n      address,\n      mb_addr\n    } = props.query;\n    const Vote_event = await vote(address);\n    const stage = await Vote_event.methods.return_stage().call();\n    const option_length = await Vote_event.methods.return_options_length().call();\n    const result = await Vote_event.methods.return_result().call(); //console.log(Vote_event);\n\n    let voter_list = await Vote_event.methods.return_msgsender_voter_list().call();\n    let winner = await Vote_event.methods.return_winner().call();\n    console.log(winner); //console.log(voter_list);\n\n    var options = [];\n    const stage_str = stage == 0 ? \"stage : Setup\" : stage == 1 ? \"stage : Register\" : stage == 2 ? \"stage : Vote\" : stage == 3 ? \"stage : Tally\" : stage == 4 ? \"stage : Finish\" : \"stage : Setup\";\n\n    for (let index = 0; index < option_length; index++) {\n      let temp = await Vote_event.methods.return_options(index).call();\n      let arr = [];\n      arr[0] = (index + 1).toString();\n      arr[1] = temp;\n      arr[2] = result[index];\n      options.push(arr);\n    }\n\n    return {\n      address,\n      mb_addr,\n      stage,\n      result,\n      options,\n      stage_str,\n      voter_list,\n      winner\n    };\n  }\n\n  refresh_search() {\n    if (this.state.search != \"\") Router.pushRoute(`/Vote/status/${this.state.search}`); //console.log(this.props.address);\n  }\n\n  search_register() {\n    if (this.state.register == \"\") {\n      this.setState({\n        register_answer: \"\"\n      });\n      return;\n    }\n\n    for (let index = 0; index < this.props.voter_list.length; index++) {\n      if (this.state.register == this.props.voter_list[index]) {\n        this.setState({\n          register_answer: \"Already Registered !\"\n        });\n        this.setState({\n          register: \"\"\n        });\n        return;\n      }\n    } //console.log(this.state.register_answer);\n\n\n    this.setState({\n      register_answer: \"Voter not found !\"\n    });\n    this.setState({\n      register: \"\"\n    }); //this.setState({register_answer:\"\"});\n  }\n\n  render() {\n    return __jsx(React.Fragment, null, __jsx(\"link\", {\n      rel: \"stylesheet\",\n      href: \"https://maxcdn.bootstrapcdn.com/bootstrap/4.5.0/css/bootstrap.min.css\",\n      integrity: \"sha384-9aIt2nRpC12Uk9gS9baDl411NQApFmC26EwAOH8WgZl5MYYxFfc+NcPb1dKGj7Sk\",\n      crossorigin: \"anonymous\"\n    }), __jsx(Container, null, __jsx(Navbar, {\n      bg: \"dark\",\n      variant: \"dark\",\n      style: {\n        width: \"100%\"\n      }\n    }, __jsx(Navbar.Brand, null, \"Vote\"), console.log(this.props.winner), __jsx(Nav, {\n      className: \"mr-auto\"\n    }, __jsx(Link, {\n      route: \"/Vote/home/\" + this.props.mb_addr\n    }, __jsx(\"a\", {\n      style: {\n        color: \"white\",\n        width: \"100px\"\n      }\n    }, \"Home\")), __jsx(Link, {\n      route: \"/Vote/status/\" + this.props.mb_addr + \"/\" + this.props.address\n    }, __jsx(\"a\", {\n      style: {\n        color: \"white\",\n        width: \"100px\"\n      }\n    }, \"Vote\")), __jsx(Link, {\n      route: \"/Vote/index\"\n    }, __jsx(\"a\", {\n      style: {\n        color: \"white\",\n        width: \"100px\"\n      }\n    }, \"Logout\"))), __jsx(Form, {\n      inline: true,\n      style: {\n        margin: \"auto\"\n      }\n    }, __jsx(\"div\", {\n      style: {\n        color: \"white\"\n      }\n    }, \" insert your vote contract address here  ->   \"), __jsx(FormControl, {\n      type: \"text\",\n      placeholder: \"Search\",\n      className: \"mr-sm-2\",\n      value: this.state.search,\n      onChange: event => this.setState({\n        search: event.target.value\n      })\n    }), __jsx(Button, {\n      variant: \"outline-info\",\n      onClick: this.refresh_search\n    }, \"Search\"))), __jsx(Card, {\n      style: {\n        width: '46%',\n        margin: '1.5%',\n        height: '30%'\n      }\n    }, __jsx(Card.Body, null, __jsx(Card.Title, null, \"Eligible Voters\"), __jsx(Card.Subtitle, {\n      className: \"mb-2 text-muted\"\n    }, \"voter quantity : \", this.props.voter_list.length), __jsx(Form, {\n      inline: true,\n      style: {\n        margin: \"auto\"\n      }\n    }, __jsx(FormControl, {\n      type: \"text\",\n      placeholder: \"Search\",\n      className: \"mr-sm-2\",\n      value: this.state.register,\n      onChange: event => this.setState({\n        register: event.target.value\n      })\n    }), __jsx(Button, {\n      variant: \"outline-info\",\n      onClick: this.search_register\n    }, \"Search\"), __jsx(Card.Subtitle, {\n      className: \"mb-2 text-muted\",\n      style: {\n        marginTop: \"1%\",\n        margin: \"2%\"\n      }\n    }, this.state.register_answer)), __jsx(Table, {\n      responsive: true,\n      style: {\n        'height': '200px',\n        \"width\": \"100%\",\n        'overflowY': 'scroll',\n        'display': 'block'\n      }\n    }, __jsx(\"thead\", null, __jsx(\"tr\", null, __jsx(\"th\", null, \"#\"), __jsx(\"th\", null, \"Voting Address\"), __jsx(\"th\", null, \"Register or not\"))), __jsx(\"tbody\", null, __jsx(Voter_listQQ, {\n      list: this.props.voter_list\n    }))))), __jsx(Card, {\n      style: {\n        width: '46%',\n        margin: '1.5%'\n      }\n    }, __jsx(Card.Body, null, __jsx(Card.Title, null, \"Voting Illustration\"), __jsx(Card.Subtitle, {\n      className: \"mb-2 text-muted\"\n    }, \"Vote address : \", this.props.address), __jsx(Card.Subtitle, {\n      className: \"mb-2 text-muted\"\n    }, this.props.stage_str), __jsx(Card.Text, null, \"View the latest 2020 presidential polls and head-to-head match-up between Joe Biden and Donald Trump. For more information, view cnn.com/election.\"))), __jsx(Card, {\n      style: {\n        width: '46%',\n        margin: '1.5%'\n      }\n    }, __jsx(Card.Body, null, __jsx(Card.Title, null, \"Voting result\"), __jsx(Card.Subtitle, {\n      className: \"mb-2 text-muted\"\n    }, \"The Vote result is shown below\"), __jsx(Vote_result, {\n      results: this.props.options,\n      stage: this.props.stage,\n      stage_str: this.props.stage_str,\n      address: this.props.address,\n      mb_addr: this.props.mb_addr\n    }))), __jsx(Card, {\n      style: {\n        width: '46%',\n        margin: '1.5%'\n      }\n    }, __jsx(Card.Body, null, __jsx(Card.Title, null, \"Retally\"), __jsx(Card.Subtitle, {\n      className: \"mb-2 text-muted\"\n    }, \"You can retally the vote for assuring the result\"), __jsx(Retally, {\n      stage: this.props.stage,\n      address: this.props.address,\n      mb_addr: this.props.mb_addr\n    })))));\n  }\n\n}\n\nclass Retally extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n    this.go_tally = this.go_tally.bind(this);\n  }\n\n  async go_tally() {\n    //0x42309f924237Bac662Af64965A2efAF8c08fE4d2\n    const accounts = await web3.eth.getAccounts();\n    const Vote_event = await vote(this.props.address); //console.log(web3.utils.fromAscii(hash));\n\n    try {\n      await Vote_event.methods.compute().send({\n        from: accounts[0]\n      });\n      Router.pushRoute(`/Vote/status/${this.props.mb_addr}/${this.props.address}`);\n    } catch (err) {\n      alert(err.message);\n    }\n  }\n\n  render() {\n    if (this.props.stage <= 2) return __jsx(React.Fragment, null, __jsx(\"h3\", null, \"Have not reach the stage can Tally\"), __jsx(\"h3\", null, \"Please wait for a while\"));else return __jsx(React.Fragment, null, __jsx(Button, {\n      variant: \"primary\",\n      size: \"lg\",\n      style: {\n        margin: \"auto\"\n      },\n      onClick: this.go_tally\n    }, \"Retally button\"), ' ');\n  }\n\n}\n\n;\n\nclass Vote_result extends Component {\n  //const vote_btn =function (stage ){\n  render() {\n    //console.log(this.props.results);\n    if (this.props.stage < 3) return __jsx(React.Fragment, null, __jsx(\"h3\", null, \"Have not reach the stage can Tally\"), __jsx(\"h3\", null, \"Please wait for a while\"));else return __jsx(React.Fragment, null, __jsx(Card.Subtitle, {\n      className: \"mb-2 text-muted\"\n    }, \"Elected Candidate : Korean Fish\"), __jsx(Card.Subtitle, {\n      className: \"mb-2 text-muted\"\n    }, this.props.stage_str), __jsx(Table, {\n      responsive: true\n    }, __jsx(\"thead\", null, __jsx(\"tr\", null, __jsx(\"th\", null, \"#\"), __jsx(\"th\", null, \"Option's Name\"), __jsx(\"th\", null, \"Totol votes to the option\"))), __jsx(\"tbody\", null, this.props.results.map(result => __jsx(\"tr\", null, __jsx(Vote_result_Unit, {\n      details: result\n    }))))));\n  }\n\n}\n\n;\n\nclass Vote_result_Unit extends Component {\n  render() {\n    return __jsx(React.Fragment, null, this.props.details.map(detail => __jsx(\"td\", null, detail)));\n  }\n\n}\n\nclass Voter_listQQ extends Component {\n  render() {\n    //console.log(this.props.list);\n    return __jsx(React.Fragment, null, this.props.list.map((item, index) => __jsx(\"tr\", null, __jsx(\"td\", null, index + 1), __jsx(\"td\", null, item), __jsx(\"td\", null, \"Yes\"))));\n  }\n\n}\n\nexport default Status;\n/**暫時性垃圾\r\n * <Table responsive style={{'height': '200px',\"width\":\"50%\", 'overflowY':'scroll', 'display': 'block'}}>\r\n                    <thead>\r\n                        <tr>\r\n                        <th>#</th>\r\n                        <th>items</th>\r\n                        <th>link</th>\r\n                        </tr>\r\n                    </thead>\r\n                    \r\n                    <tbody>\r\n                        <tr>\r\n                        <td>1</td>\r\n                        <td>register or not</td>\r\n                        <td>True</td>\r\n                        </tr>\r\n                        <tr>\r\n                        <td>2</td>\r\n                        <td>Status</td>\r\n                        <td>Vote</td>\r\n                        </tr>\r\n                        <tr>\r\n                        <td>3</td>\r\n                        <td>Candidate 1</td>\r\n                        <td><Card.Link href=\"#\">policy</Card.Link></td>\r\n                        </tr>\r\n                        <tr>\r\n                        <td>3</td>\r\n                        <td>Table cell</td>\r\n                        <td>Table cell</td>\r\n                        </tr>\r\n                        <tr>\r\n                        <td>3</td>\r\n                        <td>Table cell</td>\r\n                        <td>Table cell</td>\r\n                        </tr>\r\n                        <tr>\r\n                        <td>3</td>\r\n                        <td>Table cell</td>\r\n                        <td>Table cell</td>\r\n                        </tr>\r\n                        <tr>\r\n                        <td>3</td>\r\n                        <td>Table cell</td>\r\n                        <td>Table cell</td>\r\n                        </tr>\r\n                    </tbody>\r\n                </Table>\r\n */","map":{"version":3,"sources":["C:/Users/suvin/vincent/Dapp/nextjs-web/pages/Vote/status.js"],"names":["React","Component","Link","Navbar","Nav","Container","Form","FormControl","Button","Card","Table","ReactShadowScroll","web3","Router","vote","Status","constructor","props","state","search","register","register_answer","loading","loading2","errorMessage","refresh_search","bind","search_register","getInitialProps","address","mb_addr","query","Vote_event","stage","methods","return_stage","call","option_length","return_options_length","result","return_result","voter_list","return_msgsender_voter_list","winner","return_winner","console","log","options","stage_str","index","temp","return_options","arr","toString","push","pushRoute","setState","length","render","width","color","margin","event","target","value","height","marginTop","Retally","go_tally","accounts","eth","getAccounts","compute","send","from","err","alert","message","Vote_result","results","map","Vote_result_Unit","details","detail","Voter_listQQ","list","item"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport{Link}from '../../routes';\r\n\r\nimport Navbar from 'react-bootstrap/Navbar';\r\nimport Nav from 'react-bootstrap/Nav';\r\nimport Container from 'react-bootstrap/Nav';\r\nimport Form from 'react-bootstrap/Form';\r\nimport FormControl from 'react-bootstrap/FormControl';\r\nimport Button from 'react-bootstrap/Button';\r\nimport {Card,Table} from 'react-bootstrap';\r\nimport ReactShadowScroll from 'react-shadow-scroll';\r\nimport web3 from '../../ethereum/web3'\r\nimport {Router}from '../../routes';\r\nimport vote from '../../ethereum/Vote/vote';\r\n\r\nclass Status extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state ={\r\n          search : \"\",\r\n          register : \"\",\r\n          register_answer : \"\",\r\n          loading : false,\r\n          loading2: false,\r\n          errorMessage:''\r\n        };\r\n        this.refresh_search = this.refresh_search.bind(this);\r\n        this.search_register = this.search_register.bind(this);\r\n    }\r\n    static async getInitialProps(props){\r\n        const{address,mb_addr} = props.query;\r\n        const Vote_event =await vote(address);\r\n        const stage = await Vote_event.methods.return_stage().call();\r\n        const option_length = await Vote_event.methods.return_options_length().call();\r\n        const result = await Vote_event.methods.return_result().call();\r\n        //console.log(Vote_event);\r\n        let voter_list = await Vote_event.methods.return_msgsender_voter_list().call();\r\n        let winner = await Vote_event.methods.return_winner().call();\r\n        console.log(winner);\r\n        \r\n        //console.log(voter_list);\r\n        var options = [];\r\n\r\n        const stage_str =  (stage == 0)?\"stage : Setup\":\r\n                           (stage == 1)?\"stage : Register\":\r\n                           (stage == 2)?\"stage : Vote\":\r\n                           (stage == 3)?\"stage : Tally\":\r\n                           (stage == 4)?\"stage : Finish\":\"stage : Setup\";\r\n\r\n        for (let index = 0; index < option_length; index++) {\r\n            let temp = await Vote_event.methods.return_options(index).call();\r\n            let arr = [];\r\n            arr[0] = (index+1).toString();\r\n            arr[1] = temp;\r\n            arr[2] = result[index];\r\n            options.push(arr);\r\n        }\r\n\r\n        return{address,mb_addr,stage,result,options,stage_str,voter_list,winner};\r\n    }\r\n    refresh_search(){\r\n        if(this.state.search != \"\")\r\n         Router.pushRoute(`/Vote/status/${this.state.search}`);\r\n         //console.log(this.props.address);\r\n     }\r\n    search_register(){\r\n        if(this.state.register == \"\"){\r\n            this.setState({register_answer:\"\"});\r\n            return;\r\n        }\r\n        for (let index = 0; index < this.props.voter_list.length;index++){\r\n            if(this.state.register == this.props.voter_list[index]){\r\n                this.setState({register_answer:\"Already Registered !\"});\r\n                this.setState({register:\"\"});\r\n                return;\r\n            }\r\n        }\r\n        //console.log(this.state.register_answer);\r\n        this.setState({register_answer : \"Voter not found !\"});\r\n        this.setState({register:\"\"});\r\n        //this.setState({register_answer:\"\"});\r\n    }\r\n    render() {\r\n        return(\r\n        <>\r\n         <link rel=\"stylesheet\" href=\"https://maxcdn.bootstrapcdn.com/bootstrap/4.5.0/css/bootstrap.min.css\" integrity=\"sha384-9aIt2nRpC12Uk9gS9baDl411NQApFmC26EwAOH8WgZl5MYYxFfc+NcPb1dKGj7Sk\" crossorigin=\"anonymous\"/>\r\n         <Container>\r\n         <Navbar bg=\"dark\" variant=\"dark\"style={{width:\"100%\"}}>\r\n         <Navbar.Brand >Vote</Navbar.Brand>\r\n         {console.log(this.props.winner)}\r\n         <Nav className=\"mr-auto\">\r\n                <Link route={\"/Vote/home/\"+ this.props.mb_addr }  ><a style={{color: \"white\", width:\"100px\"}}>Home</a></Link>\r\n                <Link route={\"/Vote/status/\"+this.props.mb_addr+\"/\"+this.props.address} ><a style={{color: \"white\", width:\"100px\"}}>Vote</a></Link>\r\n                <Link route={\"/Vote/index\" }  ><a style={{color: \"white\", width:\"100px\"}}>Logout</a></Link>\r\n             </Nav>\r\n            <Form inline style={{margin :\"auto\"}}>\r\n            <div style={{color : \"white\"}} > insert your vote contract address here  -&gt;   </div>\r\n            <FormControl type=\"text\" placeholder=\"Search\" className=\"mr-sm-2\" \r\n             value={this.state.search} \r\n             onChange = {event => this.setState({search:event.target.value})}/>\r\n            <Button variant=\"outline-info\" onClick={this.refresh_search}>Search</Button>\r\n            </Form>\r\n        </Navbar>\r\n            \r\n        <Card style={{ width: '46%' , margin: '1.5%' ,height: '30%' }}>\r\n            <Card.Body>\r\n                <Card.Title>Eligible Voters</Card.Title>\r\n                <Card.Subtitle className=\"mb-2 text-muted\">voter quantity : {this.props.voter_list.length}</Card.Subtitle>\r\n                <Form inline style={{margin :\"auto\"}}>\r\n                        <FormControl type=\"text\" placeholder=\"Search\" className=\"mr-sm-2\" \r\n                            value={this.state.register} \r\n                            onChange = {event => this.setState({register:event.target.value})}/>\r\n                        <Button variant=\"outline-info\" onClick={this.search_register}>Search</Button>\r\n                        <Card.Subtitle className=\"mb-2 text-muted\" style={{marginTop :\"1%\",margin :\"2%\"}}>{this.state.register_answer}</Card.Subtitle>\r\n                </Form>\r\n                <Table responsive style={{'height': '200px',\"width\":\"100%\", 'overflowY':'scroll', 'display': 'block'}}>\r\n                    <thead>\r\n                        <tr>\r\n                        <th>#</th>\r\n                        <th>Voting Address</th>\r\n                        <th>Register or not</th>\r\n                        </tr>\r\n                    </thead>\r\n                    \r\n                    <tbody>\r\n                        <Voter_listQQ list ={this.props.voter_list}></Voter_listQQ>\r\n                        {/*<tr>\r\n                        <td>1</td>\r\n                        <td>Table cell</td>\r\n                        <td>Table cell</td>\r\n                        </tr>\r\n                        <tr>\r\n                        <td>2</td>\r\n                        <td>Table cell</td>\r\n                        <td>Table cell</td>\r\n                        </tr>\r\n                        <tr>\r\n                        <td>3</td>\r\n                        <td>Table cell</td>\r\n                        <td>Table cell</td>\r\n                        </tr>\r\n                        <tr>\r\n                        <td>3</td>\r\n                        <td>Table cell</td>\r\n                        <td>Table cell</td>\r\n                        </tr>\r\n                        <tr>\r\n                        <td>3</td>\r\n                        <td>Table cell</td>\r\n                        <td>Table cell</td>\r\n                        </tr>\r\n                        <tr>\r\n                        <td>3</td>\r\n                        <td>Table cell</td>\r\n                        <td>Table cell</td>\r\n                        </tr>\r\n                        <tr>\r\n                        <td>3</td>\r\n                        <td>Table cell</td>\r\n                        <td>Table cell</td>\r\n                        </tr>*/}\r\n                    </tbody>\r\n                </Table>\r\n                \r\n            </Card.Body>\r\n        </Card>\r\n        <Card style={{ width: '46%' , margin: '1.5%'}}>\r\n            <Card.Body>\r\n                <Card.Title>Voting Illustration</Card.Title>\r\n                <Card.Subtitle className=\"mb-2 text-muted\">Vote address : {this.props.address}</Card.Subtitle>\r\n                <Card.Subtitle className=\"mb-2 text-muted\">{this.props.stage_str}</Card.Subtitle>\r\n                <Card.Text>\r\n                    View the latest 2020 presidential polls and head-to-head match-up between Joe Biden and Donald Trump. For more information, view cnn.com/election.\r\n                </Card.Text>\r\n                \r\n                \r\n            </Card.Body>\r\n        </Card>\r\n        <Card style={{ width: '46%' , margin: '1.5%'}}>\r\n            <Card.Body>\r\n                <Card.Title>Voting result</Card.Title>\r\n                <Card.Subtitle className=\"mb-2 text-muted\">The Vote result is shown below</Card.Subtitle>\r\n                        <Vote_result results = {this.props.options} stage ={this.props.stage}\r\n                                     stage_str={this.props.stage_str} address = {this.props.address} mb_addr={this.props.mb_addr}>\r\n                        </Vote_result>\r\n                        \r\n            </Card.Body>\r\n        </Card>\r\n        <Card style={{ width: '46%' , margin: '1.5%'}}>\r\n            <Card.Body>\r\n                <Card.Title>Retally</Card.Title>\r\n                <Card.Subtitle className=\"mb-2 text-muted\">You can retally the vote for assuring the result</Card.Subtitle>\r\n                <Retally stage = {this.props.stage} address = {this.props.address} mb_addr={this.props.mb_addr}></Retally>\r\n                {/*<Button variant=\"primary\" size=\"lg\" style={{ margin:\"auto\"}}>\r\n                     Retally button\r\n                </Button>*/}\r\n            </Card.Body>\r\n        </Card>\r\n      </Container>\r\n        </>\r\n    )\r\n    }\r\n}\r\n\r\nclass Retally extends Component{\r\n    constructor(props) {\r\n        super(props);\r\n        this.state ={\r\n            \r\n        };\r\n        this.go_tally = this.go_tally.bind(this);\r\n      }\r\n      async go_tally(){\r\n            //0x42309f924237Bac662Af64965A2efAF8c08fE4d2\r\n            const accounts = await web3.eth.getAccounts();\r\n            const Vote_event =await vote(this.props.address);\r\n            //console.log(web3.utils.fromAscii(hash));\r\n            try{\r\n                await Vote_event.methods.compute().send({from:accounts[0]});\r\n                Router.pushRoute(`/Vote/status/${this.props.mb_addr}/${this.props.address}`);\r\n            } catch (err) {\r\n                alert(err.message);\r\n            }\r\n        }\r\n        render(){\r\n        if(this.props.stage <=2 ) \r\n            return (\r\n                <>\r\n                <h3>Have not reach the stage can Tally</h3>\r\n                <h3>Please wait for a while</h3>\r\n                </>\r\n            );\r\n        else \r\n            return (\r\n                <>\r\n                <Button variant=\"primary\" size=\"lg\" style={{ margin:\"auto\"}} onClick={this.go_tally}>\r\n                     Retally button\r\n                </Button>{' '}\r\n                </>\r\n            );\r\n        }\r\n  };\r\n\r\nclass Vote_result extends Component{\r\n    //const vote_btn =function (stage ){\r\n        render(){\r\n        //console.log(this.props.results);\r\n        if(this.props.stage <3 ) \r\n            return (\r\n                <>\r\n                <h3>Have not reach the stage can Tally</h3>\r\n                <h3>Please wait for a while</h3>\r\n                </>\r\n            );\r\n        else \r\n            return (\r\n                <>\r\n                <Card.Subtitle className=\"mb-2 text-muted\">Elected Candidate : Korean Fish</Card.Subtitle>\r\n                <Card.Subtitle className=\"mb-2 text-muted\">{this.props.stage_str}</Card.Subtitle>\r\n                <Table responsive>\r\n                    <thead>\r\n                        <tr>\r\n                        <th>#</th>\r\n                        <th>Option's Name</th>\r\n                        <th>Totol votes to the option</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {this.props.results.map(result => <tr><Vote_result_Unit details={result}></Vote_result_Unit></tr>)}\r\n                    </tbody>\r\n                </Table>\r\n                </>\r\n            );\r\n        }\r\n  };\r\nclass Vote_result_Unit extends Component{\r\n    render(){\r\n        return(\r\n            <>\r\n            {this.props.details.map(detail => <td>{detail}</td>)}\r\n            </>\r\n        )\r\n    }\r\n}\r\nclass Voter_listQQ extends Component{\r\n    render(){\r\n        //console.log(this.props.list);\r\n        return(\r\n            <>\r\n            {this.props.list.map((item,index)=>\r\n                <tr>\r\n                <td>{index+1}</td>\r\n                <td>{item}</td>\r\n                <td>Yes</td>\r\n                </tr>\r\n            )}\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Status;\r\n\r\n\r\n/**暫時性垃圾\r\n * <Table responsive style={{'height': '200px',\"width\":\"50%\", 'overflowY':'scroll', 'display': 'block'}}>\r\n                    <thead>\r\n                        <tr>\r\n                        <th>#</th>\r\n                        <th>items</th>\r\n                        <th>link</th>\r\n                        </tr>\r\n                    </thead>\r\n                    \r\n                    <tbody>\r\n                        <tr>\r\n                        <td>1</td>\r\n                        <td>register or not</td>\r\n                        <td>True</td>\r\n                        </tr>\r\n                        <tr>\r\n                        <td>2</td>\r\n                        <td>Status</td>\r\n                        <td>Vote</td>\r\n                        </tr>\r\n                        <tr>\r\n                        <td>3</td>\r\n                        <td>Candidate 1</td>\r\n                        <td><Card.Link href=\"#\">policy</Card.Link></td>\r\n                        </tr>\r\n                        <tr>\r\n                        <td>3</td>\r\n                        <td>Table cell</td>\r\n                        <td>Table cell</td>\r\n                        </tr>\r\n                        <tr>\r\n                        <td>3</td>\r\n                        <td>Table cell</td>\r\n                        <td>Table cell</td>\r\n                        </tr>\r\n                        <tr>\r\n                        <td>3</td>\r\n                        <td>Table cell</td>\r\n                        <td>Table cell</td>\r\n                        </tr>\r\n                        <tr>\r\n                        <td>3</td>\r\n                        <td>Table cell</td>\r\n                        <td>Table cell</td>\r\n                        </tr>\r\n                    </tbody>\r\n                </Table>\r\n */"]},"metadata":{},"sourceType":"module"}