{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { Component } from 'react';\nimport { Button, Form } from 'semantic-ui-react';\nimport Layout from '../../../components/Layout';\nimport { Link } from '../../../routes';\n\nclass CertificateIndex extends Component {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"state\", {\n      selectedFile: null\n    });\n\n    _defineProperty(this, \"onFileChange\", event => {\n      state = {\n        selectedFile: null,\n        hashValue: null\n      };\n      const curFile = event.target.files[0];\n      const reader = new FileReader();\n      reader.readAsText(curFile);\n\n      reader.onload = function (e) {\n        //console.log('file:', e.target.result);\n        let jsonData = JSON.parse(this.result);\n        console.log(jsonData); // hash json\n\n        let reader = new FileReader();\n        reader.readAsArrayBuffer(curFile);\n\n        reader.onload = function (e) {\n          var wordArray = CryptoJS.lib.WordArray.create(reader.result);\n          var hash = CryptoJS.SHA256(wordArray).toString();\n          this.hashValue = hash;\n          console.log(this.hashValue);\n        };\n      };\n    });\n\n    _defineProperty(this, \"fileData\", () => {\n      if (this.state.selectedFile) {\n        return __jsx(\"div\", null, __jsx(\"h2\", null, \"File Details:\"), __jsx(\"p\", null, \"File Name: \", this.state.selectedFile.name), __jsx(\"p\", null, \"File Type: \", this.state.selectedFile.type));\n      }\n    });\n  }\n\n  render() {\n    return __jsx(Layout, null, __jsx(\"script\", {\n      src: \"https://cdnjs.cloudflare.com/ajax/libs/crypto-js/3.1.9-1/crypto-js.js\"\n    }), __jsx(\"h1\", null, \"Upload Certificates\"), __jsx(Form, null, __jsx(\"h3\", null, \"Choose a JSON file\"), __jsx(\"input\", {\n      type: \"file\",\n      onChange: this.onFileChange,\n      accept: \"application/json\",\n      style: {\n        marginBottom: 20\n      }\n    }), this.fileData(), __jsx(\"a\", null, __jsx(Button, {\n      content: \"Upload\",\n      icon: \"upload\",\n      primary: true,\n      style: {\n        marginTop: 20\n      }\n    })), __jsx(Form.Field, null, __jsx(\"label\", null, \"Add new school\"), __jsx(Input, {\n      value: this.state.school,\n      onChange: event => this.setState({\n        recipient: event.target.value\n      })\n    }))));\n  }\n\n}\n\nexport default CertificateIndex;","map":{"version":3,"sources":["C:/Users/user/Desktop/college/Blockchain/DApp/nextjs-web/pages/Academic/school/index.js"],"names":["React","Component","Button","Form","Layout","Link","CertificateIndex","selectedFile","event","state","hashValue","curFile","target","files","reader","FileReader","readAsText","onload","e","jsonData","JSON","parse","result","console","log","readAsArrayBuffer","wordArray","CryptoJS","lib","WordArray","create","hash","SHA256","toString","name","type","render","onFileChange","marginBottom","fileData","marginTop","school","setState","recipient","value"],"mappings":";;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,MAAT,EAAiBC,IAAjB,QAA6B,mBAA7B;AACA,OAAOC,MAAP,MAAmB,4BAAnB;AACA,SAASC,IAAT,QAAqB,iBAArB;;AAEA,MAAMC,gBAAN,SAA+BL,SAA/B,CAAyC;AAAA;AAAA;;AAAA,mCAC/B;AAAEM,MAAAA,YAAY,EAAE;AAAhB,KAD+B;;AAAA,0CAGxBC,KAAK,IAAI;AACtBC,MAAAA,KAAK,GAAG;AACNF,QAAAA,YAAY,EAAE,IADR;AAENG,QAAAA,SAAS,EAAE;AAFL,OAAR;AAKA,YAAMC,OAAO,GAAGH,KAAK,CAACI,MAAN,CAAaC,KAAb,CAAmB,CAAnB,CAAhB;AACA,YAAMC,MAAM,GAAG,IAAIC,UAAJ,EAAf;AACAD,MAAAA,MAAM,CAACE,UAAP,CAAkBL,OAAlB;;AACAG,MAAAA,MAAM,CAACG,MAAP,GAAgB,UAAUC,CAAV,EAAa;AAC3B;AACA,YAAIC,QAAQ,GAAGC,IAAI,CAACC,KAAL,CAAW,KAAKC,MAAhB,CAAf;AACAC,QAAAA,OAAO,CAACC,GAAR,CAAYL,QAAZ,EAH2B,CAK3B;;AACA,YAAIL,MAAM,GAAG,IAAIC,UAAJ,EAAb;AACAD,QAAAA,MAAM,CAACW,iBAAP,CAAyBd,OAAzB;;AACAG,QAAAA,MAAM,CAACG,MAAP,GAAgB,UAAUC,CAAV,EAAa;AAC3B,cAAIQ,SAAS,GAAGC,QAAQ,CAACC,GAAT,CAAaC,SAAb,CAAuBC,MAAvB,CAA8BhB,MAAM,CAACQ,MAArC,CAAhB;AACA,cAAIS,IAAI,GAAGJ,QAAQ,CAACK,MAAT,CAAgBN,SAAhB,EAA2BO,QAA3B,EAAX;AACA,eAAKvB,SAAL,GAAiBqB,IAAjB;AACAR,UAAAA,OAAO,CAACC,GAAR,CAAY,KAAKd,SAAjB;AACD,SALD;AAMD,OAdD;AAeD,KA3BsC;;AAAA,sCA6B5B,MAAM;AACf,UAAI,KAAKD,KAAL,CAAWF,YAAf,EAA6B;AAC3B,eACE,mBACE,kCADF,EAEE,gCAAe,KAAKE,KAAL,CAAWF,YAAX,CAAwB2B,IAAvC,CAFF,EAGE,gCAAe,KAAKzB,KAAL,CAAWF,YAAX,CAAwB4B,IAAvC,CAHF,CADF;AAOD;AACF,KAvCsC;AAAA;;AAyCvCC,EAAAA,MAAM,GAAG;AACP,WACE,MAAC,MAAD,QACE;AAAQ,MAAA,GAAG,EAAC;AAAZ,MADF,EAEE,wCAFF,EAGE,MAAC,IAAD,QACE,uCADF,EAEE;AACE,MAAA,IAAI,EAAC,MADP;AAEE,MAAA,QAAQ,EAAE,KAAKC,YAFjB;AAGE,MAAA,MAAM,EAAC,kBAHT;AAIE,MAAA,KAAK,EAAE;AAAEC,QAAAA,YAAY,EAAE;AAAhB;AAJT,MAFF,EAQG,KAAKC,QAAL,EARH,EAUI,iBACE,MAAC,MAAD;AACE,MAAA,OAAO,EAAC,QADV;AAEE,MAAA,IAAI,EAAC,QAFP;AAGE,MAAA,OAAO,EAAE,IAHX;AAIE,MAAA,KAAK,EAAE;AAAEC,QAAAA,SAAS,EAAE;AAAb;AAJT,MADF,CAVJ,EAmBE,MAAC,IAAD,CAAM,KAAN,QACE,sCADF,EAEE,MAAC,KAAD;AACE,MAAA,KAAK,EAAE,KAAK/B,KAAL,CAAWgC,MADpB;AAEE,MAAA,QAAQ,EAAEjC,KAAK,IACb,KAAKkC,QAAL,CAAc;AAAEC,QAAAA,SAAS,EAAEnC,KAAK,CAACI,MAAN,CAAagC;AAA1B,OAAd;AAHJ,MAFF,CAnBF,CAHF,CADF;AAkCD;;AA5EsC;;AA+EzC,eAAetC,gBAAf","sourcesContent":["import React, { Component } from 'react';\r\nimport { Button, Form } from 'semantic-ui-react';\r\nimport Layout from '../../../components/Layout';\r\nimport { Link } from '../../../routes';\r\n\r\nclass CertificateIndex extends Component {\r\n  state = { selectedFile: null };\r\n\r\n  onFileChange = event => {\r\n    state = { \r\n      selectedFile: null,\r\n      hashValue: null\r\n    };\r\n\r\n    const curFile = event.target.files[0];\r\n    const reader = new FileReader();\r\n    reader.readAsText(curFile);\r\n    reader.onload = function (e) {\r\n      //console.log('file:', e.target.result);\r\n      let jsonData = JSON.parse(this.result);\r\n      console.log(jsonData);\r\n\r\n      // hash json\r\n      let reader = new FileReader();\r\n      reader.readAsArrayBuffer(curFile);\r\n      reader.onload = function (e) {\r\n        var wordArray = CryptoJS.lib.WordArray.create(reader.result);\r\n        var hash = CryptoJS.SHA256(wordArray).toString();\r\n        this.hashValue = hash;\r\n        console.log(this.hashValue);\r\n      };\r\n    };\r\n  };\r\n\r\n  fileData = () => {\r\n    if (this.state.selectedFile) {\r\n      return (\r\n        <div>\r\n          <h2>File Details:</h2>\r\n          <p>File Name: {this.state.selectedFile.name}</p>\r\n          <p>File Type: {this.state.selectedFile.type}</p>\r\n        </div>\r\n      );\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <Layout>\r\n        <script src=\"https://cdnjs.cloudflare.com/ajax/libs/crypto-js/3.1.9-1/crypto-js.js\"></script>\r\n        <h1>Upload Certificates</h1>\r\n        <Form>\r\n          <h3>Choose a JSON file</h3>\r\n          <input\r\n            type=\"file\"\r\n            onChange={this.onFileChange}\r\n            accept=\"application/json\"\r\n            style={{ marginBottom: 20 }}\r\n          />\r\n          {this.fileData()}\r\n          {/* <Link route={`/school/${this.props.address}/success`> */}\r\n            <a>\r\n              <Button\r\n                content='Upload'\r\n                icon='upload'\r\n                primary={true}\r\n                style={{ marginTop: 20 }}\r\n              />\r\n            </a>\r\n          {/* </Link> */}\r\n          <Form.Field>\r\n            <label>Add new school</label>\r\n            <Input\r\n              value={this.state.school}\r\n              onChange={event =>\r\n                this.setState({ recipient: event.target.value })}\r\n            />\r\n          </Form.Field>\r\n        </Form>\r\n      </Layout>\r\n    );\r\n  }\r\n}\r\n\r\nexport default CertificateIndex;"]},"metadata":{},"sourceType":"module"}