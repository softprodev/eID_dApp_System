{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nvar __jsx = React.createElement;\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport { Table, Button } from 'semantic-ui-react';\nimport Layout from '../../../components/Layout';\nimport { Link } from '../../../routes';\nimport CourseRow from '../../../components/CourseRow';\nimport certData from '../../../certificate.json';\n\nvar Transcript = /*#__PURE__*/function (_Component) {\n  _inherits(Transcript, _Component);\n\n  var _super = _createSuper(Transcript);\n\n  function Transcript() {\n    _classCallCheck(this, Transcript);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(Transcript, [{\n    key: \"renderRows\",\n    value: function renderRows() {\n      return this.props.transcripts.map(function (transcript, index) {\n        return __jsx(CourseRow, {\n          transcript: transcript\n        });\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var Header = Table.Header,\n          Row = Table.Row,\n          HeaderCell = Table.HeaderCell,\n          Body = Table.Body;\n      return __jsx(Layout, null, __jsx(\"h1\", null, \"Transcript\"), __jsx(Link, {\n        route: \"/Academic/certificates/success\"\n      }, __jsx(\"a\", null, \"back\")), __jsx(Table, null, __jsx(Header, null, __jsx(Row, null, __jsx(HeaderCell, null, \"CourseID\"), __jsx(HeaderCell, null, \"Name\"), __jsx(HeaderCell, null, \"Grade\"), __jsx(HeaderCell, null, \"Credit\"), __jsx(HeaderCell, null, \"Semester\"), __jsx(HeaderCell, null, \"End date\"))), __jsx(Body, null, this.renderRows)));\n    }\n  }], [{\n    key: \"getInitialProps\",\n    value: function () {\n      var _getInitialProps = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(props) {\n        var transcriptCount, transcripts;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                transcriptCount = certData.transcript.length;\n                _context.next = 3;\n                return Promise.all(Array(parseInt(transcriptCount)).fill().map(function (element, index) {\n                  return certData.transcript[index];\n                }));\n\n              case 3:\n                transcripts = _context.sent;\n                console.log(transcripts);\n                return _context.abrupt(\"return\", {\n                  transcripts: transcripts\n                });\n\n              case 6:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      function getInitialProps(_x) {\n        return _getInitialProps.apply(this, arguments);\n      }\n\n      return getInitialProps;\n    }()\n  }]);\n\n  return Transcript;\n}(Component);\n\nexport default Transcript;","map":{"version":3,"sources":["C:/Users/user/Desktop/college/Blockchain/DApp/nextjs-web/pages/Academic/certificates/transcript.js"],"names":["React","Component","Table","Button","Layout","Link","CourseRow","certData","Transcript","props","transcripts","map","transcript","index","Header","Row","HeaderCell","Body","renderRows","transcriptCount","length","Promise","all","Array","parseInt","fill","element","console","log"],"mappings":";;;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,KAAT,EAAgBC,MAAhB,QAA8B,mBAA9B;AACA,OAAOC,MAAP,MAAmB,4BAAnB;AACA,SAASC,IAAT,QAAqB,iBAArB;AACA,OAAOC,SAAP,MAAsB,+BAAtB;AACA,OAAOC,QAAP,MAAqB,2BAArB;;IAEMC,U;;;;;;;;;;;;;iCAeU;AACX,aAAO,KAAKC,KAAL,CAAWC,WAAX,CAAuBC,GAAvB,CAA2B,UAACC,UAAD,EAAaC,KAAb,EAAuB;AACvD,eACE,MAAC,SAAD;AACE,UAAA,UAAU,EAAED;AADd,UADF;AAKD,OANM,CAAP;AAOD;;;6BAEO;AAAA,UACCE,MADD,GACmCZ,KADnC,CACCY,MADD;AAAA,UACSC,GADT,GACmCb,KADnC,CACSa,GADT;AAAA,UACcC,UADd,GACmCd,KADnC,CACcc,UADd;AAAA,UAC0BC,IAD1B,GACmCf,KADnC,CAC0Be,IAD1B;AAGP,aACE,MAAC,MAAD,QACE,+BADF,EAEE,MAAC,IAAD;AAAM,QAAA,KAAK,EAAE;AAAb,SACE,wBADF,CAFF,EAKE,MAAC,KAAD,QACE,MAAC,MAAD,QACE,MAAC,GAAD,QACE,MAAC,UAAD,mBADF,EAEE,MAAC,UAAD,eAFF,EAGE,MAAC,UAAD,gBAHF,EAIE,MAAC,UAAD,iBAJF,EAKE,MAAC,UAAD,mBALF,EAME,MAAC,UAAD,mBANF,CADF,CADF,EAWE,MAAC,IAAD,QACG,KAAKC,UADR,CAXF,CALF,CADF;AAwBD;;;;uGAnD4BT,K;;;;;;AACrBU,gBAAAA,e,GAAkBZ,QAAQ,CAACK,UAAT,CAAoBQ,M;;uBAElBC,OAAO,CAACC,GAAR,CACxBC,KAAK,CAACC,QAAQ,CAACL,eAAD,CAAT,CAAL,CAAiCM,IAAjC,GAAwCd,GAAxC,CAA4C,UAACe,OAAD,EAAUb,KAAV,EAAoB;AAC9D,yBAAON,QAAQ,CAACK,UAAT,CAAoBC,KAApB,CAAP;AACD,iBAFD,CADwB,C;;;AAApBH,gBAAAA,W;AAMNiB,gBAAAA,OAAO,CAACC,GAAR,CAAYlB,WAAZ;iDAEO;AAAEA,kBAAAA,WAAW,EAAXA;AAAF,iB;;;;;;;;;;;;;;;;;;;EAZcT,S;;AAuDzB,eAAeO,UAAf","sourcesContent":["import React, { Component } from 'react';\r\nimport { Table, Button } from 'semantic-ui-react';\r\nimport Layout from '../../../components/Layout';\r\nimport { Link } from '../../../routes';\r\nimport CourseRow from '../../../components/CourseRow';\r\nimport certData from '../../../certificate.json';\r\n\r\nclass Transcript extends Component {\r\n  static async getInitialProps(props) {\r\n    const transcriptCount = certData.transcript.length;\r\n    \r\n    const transcripts = await Promise.all(\r\n      Array(parseInt(transcriptCount)).fill().map((element, index) => {\r\n        return certData.transcript[index];\r\n      })\r\n    );\r\n\r\n    console.log(transcripts);\r\n\r\n    return { transcripts };\r\n  }\r\n\r\n   renderRows() {\r\n     return this.props.transcripts.map((transcript, index) => {\r\n       return (\r\n         <CourseRow\r\n           transcript={transcript}\r\n         />\r\n       );\r\n     });\r\n   }\r\n\r\n  render() {\r\n    const { Header, Row, HeaderCell, Body } = Table;\r\n\r\n    return (\r\n      <Layout>\r\n        <h1>Transcript</h1>\r\n        <Link route={\"/Academic/certificates/success\"}>\r\n          <a>back</a>\r\n        </Link>\r\n        <Table>\r\n          <Header>\r\n            <Row>\r\n              <HeaderCell>CourseID</HeaderCell>\r\n              <HeaderCell>Name</HeaderCell>\r\n              <HeaderCell>Grade</HeaderCell>\r\n              <HeaderCell>Credit</HeaderCell>\r\n              <HeaderCell>Semester</HeaderCell>\r\n              <HeaderCell>End date</HeaderCell>\r\n            </Row>\r\n          </Header>\r\n          <Body>\r\n            {this.renderRows}\r\n            {/* <CourseRow /> */}\r\n          </Body>\r\n        </Table>\r\n      </Layout>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Transcript;"]},"metadata":{},"sourceType":"module"}